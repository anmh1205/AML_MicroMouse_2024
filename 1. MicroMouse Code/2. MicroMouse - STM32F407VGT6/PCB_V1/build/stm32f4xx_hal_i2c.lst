ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Master_SB,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	I2C_Master_SB:
  26              	.LVL0:
  27              	.LFB184:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @file    stm32f4xx_hal_i2c.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *           + Peripheral State, Mode and Error functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   ******************************************************************************
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @attention
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * Copyright (c) 2016 STMicroelectronics.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * All rights reserved.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * in the root directory of this software component.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   ******************************************************************************
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   @verbatim
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   ==============================================================================
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                         ##### How to use this driver #####
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   ==============================================================================
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   [..]
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (##) I2C pins configuration
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) Configure the Communication Speed, Duty cycle, Addressing mode, Own Address1,
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         Dual Addressing mode, Own Address2, General call and Nostretch mode in the hi2c Init struct
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** Polling mode IO operation ***
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     =================================
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     =====================================
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     ===================================
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     ==========================================================
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           when a direction change during transfer
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Option field values are defined through I2C_XferOptions_definition and are listed below:
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functional is same as associated interfac
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             and data to transfer without a final stop condition
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             several times (like HAL_I2C_Master_Seq_Transmit_IT() then HAL_I2C_Maste
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             or HAL_I2C_Master_Seq_Transmit_DMA() then HAL_I2C_Master_Seq_Transmit_D
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             interface.
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Different sequential I2C interfaces are listed below:
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using HAL_
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             or using HAL_I2C_Master_Seq_Transmit_DMA()
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using HAL_I
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             or using HAL_I2C_Master_Seq_Receive_DMA()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using HAL_I2C_Master_A
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and user can
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and user can
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using HAL_I
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             or using HAL_I2C_Slave_Seq_Transmit_DMA()
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using HAL_I2
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             or using HAL_I2C_Slave_Seq_Receive_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     =======================================
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** DMA mode IO operation ***
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     ==============================
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     =================================
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      ==================================
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      [..]
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE:     Enable the I2C peripheral
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE:    Disable the I2C peripheral
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG:   Checks whether the specified I2C flag is set or not
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT:  Enable the specified I2C interrupt
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      *** Callback registration ***
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      =============================================
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Use Functions HAL_I2C_RegisterCallback() or HAL_I2C_RegisterAddrCallback()
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      to register an interrupt callback.
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Function HAL_I2C_RegisterCallback() allows to register following callbacks:
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      and a pointer to the user callback function.
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : HAL_I2C_RegisterAddrCall
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Use function HAL_I2C_UnRegisterCallback to reset a callback to the default
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      weak function.
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      and the Callback ID.
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      This function allows to reset following callbacks:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : HAL_I2C_UnRegisterAddrCallback().
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      By default, after the HAL_I2C_Init() and when the state is HAL_I2C_STATE_RESET
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      examples HAL_I2C_MasterTxCpltCallback(), HAL_I2C_MasterRxCpltCallback().
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      reset to the legacy weak functions in the HAL_I2C_Init()/ HAL_I2C_DeInit() only when
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the HAL_I2C_Init()/ HAL_I2C_DeInit()
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Callbacks can be registered/unregistered in HAL_I2C_STATE_READY state only.
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      in HAL_I2C_STATE_READY or HAL_I2C_STATE_RESET state,
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      using HAL_I2C_RegisterCallback() before calling HAL_I2C_DeInit()
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      or HAL_I2C_Init() function.
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      are set to the corresponding weak functions.
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****      [..]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   @endverbatim
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #include "stm32f4xx_hal.h"
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @addtogroup STM32F4xx_HAL_Driver
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C I2C
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief I2C HAL module driver
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @addtogroup I2C_Private_Define
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG          35U         /*!< Timeout 35 ms             */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY_FLAG     25U         /*!< Timeout 25 ms             */
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_TIMEOUT_STOP_FLAG     5U          /*!< Timeout 5 ms              */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME       0xFFFF0000U /*!< XferOptions default value */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAXferCplt(DMA_HandleTypeDef *hdma);
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c);
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint3
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, u
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, u
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPRequestThroughIT(I2C_HandleTypeDef *hi2c);
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c);
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterTransmit_TXE(I2C_HandleTypeDef *hi2c);
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterTransmit_BTF(I2C_HandleTypeDef *hi2c);
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterReceive_RXNE(I2C_HandleTypeDef *hi2c);
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterReceive_BTF(I2C_HandleTypeDef *hi2c);
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_SB(I2C_HandleTypeDef *hi2c);
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_ADD10(I2C_HandleTypeDef *hi2c);
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_ADDR(I2C_HandleTypeDef *hi2c);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveTransmit_TXE(I2C_HandleTypeDef *hi2c);
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveTransmit_BTF(I2C_HandleTypeDef *hi2c);
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveReceive_RXNE(I2C_HandleTypeDef *hi2c);
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveReceive_BTF(I2C_HandleTypeDef *hi2c);
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_ADDR(I2C_HandleTypeDef *hi2c, uint32_t IT2Flags);
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_STOPF(I2C_HandleTypeDef *hi2c);
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_AF(I2C_HandleTypeDef *hi2c);
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MemoryTransmit_TXE_BTF(I2C_HandleTypeDef *hi2c);
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Private function to Convert Specific options */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  *
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @verbatim
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC).
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           the selected configuration:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Communication Speed
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Duty cycle
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Addressing mode
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Own Address 1
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Dual Addressing mode
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Own Address 2
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) General call mode
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) Nostretch mode
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @endverbatim
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t freqrange;
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t pclk1;
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c == NULL)
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(hi2c->Init.ClockSpeed));
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(hi2c->Init.DutyCycle));
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*Reset I2C*/
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Get PCLK1 frequency */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   pclk1 = HAL_RCC_GetPCLK1Freq();
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the minimum allowed PCLK1 frequency */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Calculate frequency range */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   freqrange = I2C_FREQRANGE(pclk1);
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx TRISE Configuration --------------------*/
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Rise Time */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx CCR Configuration ----------------------*/
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Speed */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c-
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode |
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and addressing mode */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode |
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c == NULL)
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->State         = HAL_I2C_STATE_RESET;
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Release Lock */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Initialize the I2C MSP.
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  DeInitialize the I2C MSP.
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (pCallback == NULL)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Process locked */
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     switch (CallbackID)
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       default :
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update the error code */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Return error status */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         status =  HAL_ERROR;
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 14


 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     switch (CallbackID)
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       default :
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update the error code */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Return error status */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         status =  HAL_ERROR;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Return error status */
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     status =  HAL_ERROR;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Release Lock */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return status;
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 15


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Process locked */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     switch (CallbackID)
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       default :
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update the error code */
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 16


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Return error status */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         status =  HAL_ERROR;
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     switch (CallbackID)
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       default :
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update the error code */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Return error status */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         status =  HAL_ERROR;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         break;
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Return error status */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     status =  HAL_ERROR;
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Release Lock */
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return status;
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (pCallback == NULL)
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 17


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Process locked */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Return error status */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     status =  HAL_ERROR;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Release Lock */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return status;
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Process locked */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update the error code */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Return error status */
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     status =  HAL_ERROR;
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Release Lock */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return status;
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 18


 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  *  @brief   Data transfers functions
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  *
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @verbatim
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                       ##### IO operation functions #####
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     transfers.
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) There are two modes of transfer:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             after finishing transfer.
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             using DMA mode.
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) Blocking mode functions are :
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 19


1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @endverbatim
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != H
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_BUSY;
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 20


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Slave Address */
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until TXE flag is set */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Write data to DR */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = *hi2c->pBuffPtr;
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferSize--;
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Write data to DR */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = *hi2c->pBuffPtr;
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until BTF flag is set */
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 21


1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Stop */
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != H
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_BUSY;
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 22


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Slave Address */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize == 0U)
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->XferSize == 1U)
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->XferSize == 2U)
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Pos */
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 23


1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferSize <= 3U)
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* One byte */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->XferSize == 1U)
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until RXNE flag is set */
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Two bytes */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else if (hi2c->XferSize == 2U)
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 24


1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* 3 Last bytes */
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 25


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Wait until RXNE flag is set */
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Read data from DR */
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 26


1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 27


1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until TXE flag is set */
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Write data to DR */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = *hi2c->pBuffPtr;
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferSize--;
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Write data to DR */
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = *hi2c->pBuffPtr;
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until AF flag is set */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_AF, RESET, Timeout, tickstart) != HAL_OK)
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear AF flag */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 28


1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == (uint16_t)0))
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 29


1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferSize--;
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Read data from DR */
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear STOP flag */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_STOPFLAG(hi2c);
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 30


1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 31


1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               process unlock */
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 32


1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     process unlock */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Acknowledge */
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 33


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               process unlock */
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 34


1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 35


1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               process unlock */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 36


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAXferCplt;
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferM1CpltCallback = NULL;
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferM1HalfCpltCallback = NULL;
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->I
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 37


2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable EVT and ERR interrupt */
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable DMA Request */
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Start */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Start */
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT, BUF and ERR interrupt */
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 38


2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 39


2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAXferCplt;
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferM1CpltCallback = NULL;
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferM1HalfCpltCallback = NULL;
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->DR, (uint32_t)hi2
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Start */
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable EVT and ERR interrupt */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 40


2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable DMA Request */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT, BUF and ERR interrupt */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Start */
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 41


2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAXferCplt;
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA error callback */
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferM1CpltCallback = NULL;
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferM1HalfCpltCallback = NULL;
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable the DMA stream */
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Ins
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 42


2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT and ERR interrupt */
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable DMA Request */
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_DMAEN;
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_OK;
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 43


2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAXferCplt;
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA error callback */
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferM1CpltCallback = NULL;
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferM1HalfCpltCallback = NULL;
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable the DMA stream */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->DR, (uint32_t)hi2c-
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 44


2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT and ERR interrupt */
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable DMA Request */
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_OK;
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 45


2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != H
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_BUSY;
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until TXE flag is set */
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 46


2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Write data to DR */
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = *hi2c->pBuffPtr;
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferSize--;
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Write data to DR */
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = *hi2c->pBuffPtr;
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BTF flag is set */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Stop */
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 47


2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != H
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_BUSY;
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize == 0U)
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 48


2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->XferSize == 1U)
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->XferSize == 2U)
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Pos */
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (hi2c->XferSize > 0U)
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferSize <= 3U)
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* One byte */
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->XferSize == 1U)
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until RXNE flag is set */
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 49


2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Two bytes */
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else if (hi2c->XferSize == 2U)
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* 3 Last bytes */
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Wait until BTF flag is set */
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 50


2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             return HAL_ERROR;
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Wait until RXNE flag is set */
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Read data from DR */
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferSize--;
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update counter */
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize--;
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount--;
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 51


2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 52


2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Memaddress  = MemAddress;
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemaddSize  = MemAddSize;
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->EventCount  = 0U;
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     process unlock */
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 53


2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Memaddress  = MemAddress;
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemaddSize  = MemAddSize;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 54


2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->EventCount  = 0U;
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Acknowledge */
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT, BUF and ERR interrupt */
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 55


3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Memaddress  = MemAddress;
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemaddSize  = MemAddSize;
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->EventCount  = 0U;
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAXferCplt;
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferM1CpltCallback = NULL;
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferM1HalfCpltCallback = NULL;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 56


3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->I
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Send Slave Address and Memory Address */
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tick
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort the ongoing DMA */
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           dmaxferstatus = HAL_DMA_Abort_IT(hi2c->hdmatx);
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Prevent unused argument(s) compilation and MISRA warning */
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           UNUSED(dmaxferstatus);
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the unused I2C DMA transfer complete callback to NULL */
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmatx->XferCpltCallback = NULL;
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize = 0U;
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount = 0U;
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable I2C peripheral to prevent dummy data in buffer */
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_I2C_DISABLE(hi2c);
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR flag */
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable ERR interrupt */
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_ERR);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 57


3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable DMA Request */
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_OK;
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_SIZE;
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be read
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Init tickstart for timeout management*/
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 58


3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count--;
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (count == 0U)
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Memaddress  = MemAddress;
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->MemaddSize  = MemAddSize;
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->EventCount  = 0U;
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 59


3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAXferCplt;
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferM1CpltCallback = NULL;
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferM1HalfCpltCallback = NULL;
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->DR, (uint32_t)hi2
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Send Slave Address and Memory Address */
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, ticks
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort the ongoing DMA */
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           dmaxferstatus = HAL_DMA_Abort_IT(hi2c->hdmarx);
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Prevent unused argument(s) compilation and MISRA warning */
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           UNUSED(dmaxferstatus);
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the unused I2C DMA transfer complete callback to NULL */
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmarx->XferCpltCallback = NULL;
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferSize = 0U;
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->XferCount = 0U;
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable I2C peripheral to prevent dummy data in buffer */
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_I2C_DISABLE(hi2c);
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 60


3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->XferSize == 1U)
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Last DMA bit */
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR flag */
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable ERR interrupt */
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_ERR);
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable DMA Request */
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_DMAEN;
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send Slave Address and Memory Address */
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, ticksta
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 61


3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Trials Number of trials
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Get tick */
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tickstart = HAL_GetTick();
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t I2C_Trials = 0U;
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   FlagStatus tmp1;
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   FlagStatus tmp2;
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != H
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_BUSY;
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 62


3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     do
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Start */
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until SB flag is set */
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, tickstart) != HAL_OK)
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->ErrorCode = HAL_I2C_WRONG_START;
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_TIMEOUT;
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send slave address */
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until ADDR or AF flag are set */
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Get tick */
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_TIMEOUT;
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Check if the ADDR flag has been set */
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR) == SET)
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR Flag */
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Wait until BUSY flag is reset */
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) 
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 63


3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_OK;
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear AF Flag */
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Wait until BUSY flag is reset */
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) 
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Trials */
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Trials++;
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     while (I2C_Trials < Trials);
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t Prev_State = 0x00U;
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count      = 0x00U;
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 64


3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check Busy Flag only if FIRST call of Master interface */
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP) || (XferOptions == I2C_FIRST_
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until BUSY flag is reset */
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       do
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         count--;
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (count == 0U)
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState       = I2C_STATE_NONE;
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->State               = HAL_I2C_STATE_READY;
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode                = HAL_I2C_MODE_NONE;
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Process Unlocked */
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     Prev_State = hi2c->PreviousState;
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((Prev_State != I2C_STATE_MASTER_BUSY_TX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOpti
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Start */
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 65


3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     process unlock */
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t Prev_State = 0x00U;
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count      = 0x00U;
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check Busy Flag only if FIRST call of Master interface */
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP) || (XferOptions == I2C_FIRST_
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until BUSY flag is reset */
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       do
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         count--;
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (count == 0U)
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState       = I2C_STATE_NONE;
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->State               = HAL_I2C_STATE_READY;
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode                = HAL_I2C_MODE_NONE;
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 66


3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Process Unlocked */
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     Prev_State = hi2c->PreviousState;
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAXferCplt;
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->I
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 67


3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
3749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* If transfer direction not change and there is no request to start another frame, do not 
3752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Mean Previous state is same as current state */
3753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((Prev_State != I2C_STATE_MASTER_BUSY_TX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(Xfer
3754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Start */
3756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
3764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
3765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* If XferOptions is not associated to a new frame, mean no start bit is request, enable di
3767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* In other cases, DMA request is enabled after Slave address treatment in IRQHandler */
3768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((XferOptions == I2C_NEXT_FRAME) || (XferOptions == I2C_LAST_FRAME) || (XferOptions == I
3769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable DMA Request */
3771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
3772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable EVT and ERR interrupt */
3775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
3776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
3780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
3784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
3787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
3790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 68


3793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
3795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* If transfer direction not change and there is no request to start another frame, do not ge
3798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Mean Previous state is same as current state */
3799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((Prev_State != I2C_STATE_MASTER_BUSY_TX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOp
3800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Start */
3802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
3806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
3810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
3811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT, BUF and ERR interrupt */
3813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
3814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
3817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
3829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
3834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t Prev_State = 0x00U;
3839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
3840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t enableIT = (I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
3841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check Busy Flag only if FIRST call of Master interface */
3848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP) || (XferOptions == I2C_FIRST_
3849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 69


3850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until BUSY flag is reset */
3851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       do
3853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         count--;
3855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (count == 0U)
3856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState       = I2C_STATE_NONE;
3858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->State               = HAL_I2C_STATE_READY;
3859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode                = HAL_I2C_MODE_NONE;
3860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Process Unlocked */
3863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
3875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
3876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
3878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
3879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
3882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
3894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     Prev_State = hi2c->PreviousState;
3896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->XferCount == 2U) && ((XferOptions == I2C_LAST_FRAME) || (XferOptions == I2C_LAST_FRA
3898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (Prev_State == I2C_STATE_MASTER_BUSY_RX)
3900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable Acknowledge */
3902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Pos */
3905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
3906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 70


3907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Remove Enabling of IT_BUF, mean RXNE treatment, treat the 2 bytes through BTF */
3908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         enableIT &= ~I2C_IT_BUF;
3909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
3911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
3913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
3917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
3919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
3920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOpti
3925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Start */
3927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
3928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
3931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     process unlock */
3936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable interrupts */
3938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, enableIT);
3939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
3941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
3943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
3945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
3946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
3947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
3949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential receive in master mode an amount of data in non-blocking mode with DMA
3950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
3953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
3958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
3959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
3960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
3962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t Prev_State = 0x00U;
3963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 71


3964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t enableIT = (I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
3965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
3968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
3972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check Busy Flag only if FIRST call of Master interface */
3973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP) || (XferOptions == I2C_FIRST_
3974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
3975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Wait until BUSY flag is reset */
3976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       count = I2C_TIMEOUT_BUSY_FLAG * (SystemCoreClock / 25U / 1000U);
3977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       do
3978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
3979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         count--;
3980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (count == 0U)
3981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
3982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState       = I2C_STATE_NONE;
3983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->State               = HAL_I2C_STATE_READY;
3984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode                = HAL_I2C_MODE_NONE;
3985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
3986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Process Unlocked */
3988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           return HAL_ERROR;
3991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
3992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
3993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET);
3994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
3995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
3997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
3999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
4007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear Last DMA bit */
4010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
4011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
4013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
4014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 72


4021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Devaddress  = DevAddress;
4022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     Prev_State = hi2c->PreviousState;
4024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
4026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->XferCount == 2U) && ((XferOptions == I2C_LAST_FRAME) || (XferOptions == I2C_LAST_F
4028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (Prev_State == I2C_STATE_MASTER_BUSY_RX)
4030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
4032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Pos */
4035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Last DMA bit */
4038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
4039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
4041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Acknowledge */
4043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
4047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
4049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((XferOptions == I2C_LAST_FRAME) || (XferOptions == I2C_OTHER_AND_LAST_FRAME) || (XferOp
4052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Last DMA bit */
4054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
4055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
4058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
4060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAXferCplt;
4061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the DMA error callback */
4063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
4066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
4067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
4068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable the DMA stream */
4070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->DR, (uint32_t)hi2
4071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
4073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
4075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
4076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
4077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 73


4078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
4079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
4082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
4085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
4087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* If transfer direction not change and there is no request to start another frame, do not 
4089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Mean Previous state is same as current state */
4090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(Xfer
4091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Start */
4093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
4094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update interrupt for only EVT and ERR */
4096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           enableIT = (I2C_IT_EVT | I2C_IT_ERR);
4097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
4099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Update interrupt for only ERR */
4101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           enableIT = I2C_IT_ERR;
4102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
4105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
4108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         to avoid the risk of I2C interrupt handle execution before current
4109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         process unlock */
4110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* If XferOptions is not associated to a new frame, mean no start bit is request, enable di
4112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* In other cases, DMA request is enabled after Slave address treatment in IRQHandler */
4113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((XferOptions == I2C_NEXT_FRAME) || (XferOptions == I2C_LAST_FRAME) || (XferOptions == I
4114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable DMA Request */
4116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable EVT and ERR interrupt */
4120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_ENABLE_IT(hi2c, enableIT);
4121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
4123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C state */
4125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
4126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
4127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update I2C error code */
4129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
4132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 74


4135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
4140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* If transfer direction not change and there is no request to start another frame, do not ge
4143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Mean Previous state is same as current state */
4144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(XferOp
4145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Start */
4147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
4148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
4154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
4155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
4156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable interrupts */
4158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, enableIT);
4159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential transmit in slave mode an amount of data in non-blocking mode with Interrupt
4170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
4173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
4176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
4181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
4188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
4191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 75


4192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
4201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
4204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
4214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
4215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
4217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               process unlock */
4222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
4224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
4225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential transmit in slave mode an amount of data in non-blocking mode with DMA
4236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
4239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
4242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
4245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 76


4249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
4256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
4259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
4263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
4266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
4269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort DMA RX */
4280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
4291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort DMA TX */
4302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 77


4306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Nothing to do */
4313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
4323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
4326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
4336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAXferCplt;
4339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA error callback */
4341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
4342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
4345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
4346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable the DMA stream */
4348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Ins
4349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
4353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
4357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 78


4363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
4368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
4371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
4372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
4377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
4378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
4379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT and ERR interrupt */
4380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
4381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable DMA Request */
4383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_DMAEN;
4384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_OK;
4386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
4390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
4391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
4394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
4400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential receive in slave mode an amount of data in non-blocking mode with Interrupt
4410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
4413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
4416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
4419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 79


4420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
4421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
4428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
4431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
4441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
4454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
4455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
4457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               process unlock */
4462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT, BUF and ERR interrupt */
4464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
4465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Sequential receive in slave mode an amount of data in non-blocking mode with DMA
4476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 80


4477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
4479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XferOptions_definition
4482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check the parameters */
4489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return  HAL_ERROR;
4496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
4499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
4503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
4506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
4509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort DMA RX */
4520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
4531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 81


4534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Abort DMA TX */
4542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Nothing to do */
4553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos */
4563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
4564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAXferCplt;
4579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA error callback */
4581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable the DMA stream */
4588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->DR, (uint32_t)hi2c-
4589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 82


4591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
4593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
4597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
4603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
4608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
4611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
4612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable DMA Request */
4617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
4618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
4620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       to avoid the risk of I2C interrupt handle execution before current
4621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       process unlock */
4622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable EVT and ERR interrupt */
4623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
4624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_OK;
4626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C state */
4630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
4631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update I2C error code */
4634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
4637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
4640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 83


4648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if the I2C is already enabled */
4661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
4662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable I2C peripheral */
4664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
4665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT and ERR interrupt */
4671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
4672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tmp;
4691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Address Acknowledge */
4701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT and ERR interrupt */
4704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 84


4705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_BUSY;
4711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for the specified I2C.
4718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
4721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
4725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
4726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(DevAddress);
4729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Abort Master transfer during Receive or Transmit process    */
4731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && (CurrentMode == HAL_I2C_MODE_MASTER))
4732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Locked */
4734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Acknowledge */
4740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
4741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Stop */
4743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
4744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount = 0U;
4746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT, BUF and ERR interrupt */
4748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
4749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
4751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     I2C_ITError(hi2c);
4755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_OK;
4757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wrong usage of abort function */
4761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 85


4762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Or periphal is not in busy state, mean there is no active sequence to be abort */
4763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
4764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
4769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  * @{
4773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  */
4774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
4780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t sr1itflags;
4784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t sr2itflags               = 0U;
4785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
4786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions       = hi2c->XferOptions;
4787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
4788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
4789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Master or Memory mode selected */
4791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
4792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     sr2itflags   = READ_REG(hi2c->Instance->SR2);
4794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     sr1itflags   = READ_REG(hi2c->Instance->SR1);
4795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Exit IRQ event until Start Bit detected in case of Other frame requested */
4797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUES
4798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return;
4800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* SB Set ----------------------------------------------------------------*/
4803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_I
4804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
4806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
4807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Master_SB(hi2c);
4809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* ADD10 Set -------------------------------------------------------------*/
4811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsource
4812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Master_ADD10(hi2c);
4814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* ADDR Set --------------------------------------------------------------*/
4816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources
4817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Master_ADDR(hi2c);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 86


4819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C in mode Transmitter -----------------------------------------------*/
4821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
4822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do not check buffer and BTF flag if a Xfer DMA is on going */
4824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
4825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* TXE set and BTF reset -----------------------------------------------*/
4827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, 
4828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           I2C_MasterTransmit_TXE(hi2c);
4830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* BTF set -------------------------------------------------------------*/
4832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsour
4833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if (CurrentState == HAL_I2C_STATE_BUSY_TX)
4835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             I2C_MasterTransmit_BTF(hi2c);
4837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           else /* HAL_I2C_MODE_MEM */
4839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
4840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             if (CurrentMode == HAL_I2C_MODE_MEM)
4841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             {
4842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****               I2C_MemoryTransmit_TXE_BTF(hi2c);
4843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             }
4844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
4845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
4847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Do nothing */
4849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C in mode Receiver --------------------------------------------------*/
4853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do not check buffer and BTF flag if a Xfer DMA is on going */
4856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
4857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* RXNE set and BTF reset -----------------------------------------------*/
4859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources,
4860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           I2C_MasterReceive_RXNE(hi2c);
4862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* BTF set -------------------------------------------------------------*/
4864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsour
4865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           I2C_MasterReceive_BTF(hi2c);
4867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
4869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
4870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Do nothing */
4871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
4872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Slave mode selected */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 87


4876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
4877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If an error is detected, read only SR1 register to prevent */
4879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* a clear of ADDR flags by reading SR2 after reading SR1 in Error treatment */
4880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
4881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       sr1itflags   = READ_REG(hi2c->Instance->SR1);
4883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       sr2itflags   = READ_REG(hi2c->Instance->SR2);
4887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       sr1itflags   = READ_REG(hi2c->Instance->SR1);
4888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* ADDR set --------------------------------------------------------------*/
4891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C
4892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Now time to read SR2, this will clear ADDR flag automatically */
4894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
4895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         sr2itflags   = READ_REG(hi2c->Instance->SR2);
4897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Slave_ADDR(hi2c, sr2itflags);
4899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* STOPF set --------------------------------------------------------------*/
4901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsource
4902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Slave_STOPF(hi2c);
4904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C in mode Transmitter -----------------------------------------------*/
4906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LIST
4907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* TXE set and BTF reset -----------------------------------------------*/
4909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2
4910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_SlaveTransmit_TXE(hi2c);
4912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* BTF set -------------------------------------------------------------*/
4914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsource
4915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_SlaveTransmit_BTF(hi2c);
4917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
4919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Do nothing */
4921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* I2C in mode Receiver --------------------------------------------------*/
4924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* RXNE set and BTF reset ----------------------------------------------*/
4927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I
4928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_SlaveReceive_RXNE(hi2c);
4930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* BTF set -------------------------------------------------------------*/
4932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsource
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 88


4933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_SlaveReceive_BTF(hi2c);
4935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
4937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
4938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Do nothing */
4939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
4940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
4943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
4945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
4949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
4950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
4952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef tmp1;
4953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tmp2;
4954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmp3;
4955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t tmp4;
4956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t sr1itflags = READ_REG(hi2c->Instance->SR1);
4957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t itsources  = READ_REG(hi2c->Instance->CR2);
4958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t error      = HAL_I2C_ERROR_NONE;
4959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
4960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ----------------------------------------*/
4962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_I
4963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     error |= HAL_I2C_ERROR_BERR;
4965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear BERR flag */
4967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* I2C Arbitration Lost error interrupt occurred ---------------------------*/
4971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_I
4972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     error |= HAL_I2C_ERROR_ARLO;
4974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ARLO flag */
4976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
4978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* I2C Acknowledge failure error interrupt occurred ------------------------*/
4980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_
4981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
4982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp1 = CurrentMode;
4983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp2 = hi2c->XferCount;
4984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp3 = hi2c->State;
4985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp4 = hi2c->PreviousState;
4986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((tmp1 == HAL_I2C_MODE_SLAVE) && (tmp2 == 0U) && \
4987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         ((tmp3 == HAL_I2C_STATE_BUSY_TX) || (tmp3 == HAL_I2C_STATE_BUSY_TX_LISTEN) || \
4988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****          ((tmp3 == HAL_I2C_STATE_LISTEN) && (tmp4 == I2C_STATE_SLAVE_BUSY_TX))))
4989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 89


4990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       I2C_Slave_AF(hi2c);
4991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
4992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
4993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
4994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear AF flag */
4995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       error |= HAL_I2C_ERROR_AF;
4998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
4999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do not generate a STOP in case of Slave receive non acknowledge during transfer (mean not 
5000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
5001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
5003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred -------------------------------*/
5009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT
5010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     error |= HAL_I2C_ERROR_OVR;
5012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear OVR flag */
5013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
5014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected -----------------------*/
5017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (error != HAL_I2C_ERROR_NONE)
5018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= error;
5020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     I2C_ITError(hi2c);
5021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
5026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
5031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
5037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
5042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 90


5047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
5053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
5057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
5062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
5068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
5073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
5078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
5084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
5089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_Xfe
5092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
5093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
5096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(TransferDirection);
5100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
5101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 91


5104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Listen Complete callback.
5109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
5114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
5120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
5125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
5130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
5136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
5141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
5146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
5152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  I2C error callback.
5157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 92


5161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
5162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
5168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  I2C abort callback.
5173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
5178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   UNUSED(hi2c);
5181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
5184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****    */
5185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
5189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
5192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
5193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *
5194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @verbatim
5195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
5196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
5197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****  ===============================================================================
5198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     [..]
5199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
5200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     and the data flow.
5201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** @endverbatim
5203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
5204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
5208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL state
5211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
5213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Return I2C handle state */
5215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return hi2c->State;
5216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 93


5218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
5220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL mode
5223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
5225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return hi2c->Mode;
5227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Return the I2C error code.
5231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
5233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval I2C Error Code
5234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
5236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return hi2c->ErrorCode;
5238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
5242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @}
5246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
5249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @{
5250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle TXE flag for Master
5254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterTransmit_TXE(I2C_HandleTypeDef *hi2c)
5259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
5261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
5262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
5263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions       = hi2c->XferOptions;
5264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
5266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call TxCpltCallback() directly if no stop mode is set */
5268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) 
5269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 94


5275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else /* Generate Stop condition then Call TxCpltCallback() */
5283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable EVT, BUF and ERR interrupt */
5285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
5288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
5291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
5292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->Mode == HAL_I2C_MODE_MEM)
5294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
5296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemTxCpltCallback(hi2c);
5298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_MemTxCpltCallback(hi2c);
5300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
5305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback(hi2c);
5307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_MasterTxCpltCallback(hi2c);
5309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
5314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****            ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
5315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
5317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable BUF interrupt */
5319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
5320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->Mode == HAL_I2C_MODE_MEM)
5324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         I2C_MemoryTransmit_TXE_BTF(hi2c);
5326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Write data to DR */
5330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = *hi2c->pBuffPtr;
5331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 95


5332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
5333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
5334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
5336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
5337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
5343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle BTF flag for Master transmitter
5348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterTransmit_BTF(I2C_HandleTypeDef *hi2c)
5353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
5355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions = hi2c->XferOptions;
5356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
5360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Write data to DR */
5362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = *hi2c->pBuffPtr;
5363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
5365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
5368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
5369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call TxCpltCallback() directly if no stop mode is set */
5373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME
5374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
5379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
5380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback(hi2c);
5383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_MasterTxCpltCallback(hi2c);
5385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else /* Generate Stop condition then Call TxCpltCallback() */
5388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 96


5389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable EVT, BUF and ERR interrupt */
5390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
5393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState = I2C_STATE_NONE;
5396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
5397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->Mode == HAL_I2C_MODE_MEM)
5398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
5400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->MemTxCpltCallback(hi2c);
5402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_MemTxCpltCallback(hi2c);
5404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
5407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
5409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->MasterTxCpltCallback(hi2c);
5412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_MasterTxCpltCallback(hi2c);
5414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
5422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle TXE and BTF flag for Memory transmitter
5427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MemoryTransmit_TXE_BTF(I2C_HandleTypeDef *hi2c)
5432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
5434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
5435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->EventCount == 0U)
5437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If Memory address size is 8Bit */
5439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
5440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send Memory Address */
5442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
5443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->EventCount += 2U;
5445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 97


5446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If Memory address size is 16Bit */
5447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send MSB of Memory Address */
5450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
5451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->EventCount++;
5453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->EventCount == 1U)
5456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
5459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->EventCount++;
5461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->EventCount == 2U)
5463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (CurrentState == HAL_I2C_STATE_BUSY_RX)
5465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Restart */
5467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_START;
5468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->EventCount++;
5470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
5472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Write data to DR */
5474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = *hi2c->pBuffPtr;
5475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
5477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
5480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
5481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
5483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop condition then Call TxCpltCallback() */
5485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable EVT, BUF and ERR interrupt */
5486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
5489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
5492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
5493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do nothing */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 98


5503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
5508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle RXNE flag for Master
5513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterReceive_RXNE(I2C_HandleTypeDef *hi2c)
5518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     uint32_t tmp;
5522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     tmp = hi2c->XferCount;
5524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (tmp > 3U)
5525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
5527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
5530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
5531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
5533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
5534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferCount == (uint16_t)3)
5536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable BUF interrupt, this help to treat correctly the last 4 bytes
5538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         on BTF subroutine */
5539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable BUF interrupt */
5540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
5541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
5544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (I2C_WaitOnSTOPRequestThroughIT(hi2c) == HAL_OK)
5546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable Acknowledge */
5548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable EVT, BUF and ERR interrupt */
5551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Read data from DR */
5554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
5557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
5558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 99


5560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
5561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
5563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (hi2c->Mode == HAL_I2C_MODE_MEM)
5565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
5567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState = I2C_STATE_NONE;
5568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->MemRxCpltCallback(hi2c);
5571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_MemRxCpltCallback(hi2c);
5573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
5576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
5578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->MasterRxCpltCallback(hi2c);
5582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           HAL_I2C_MasterRxCpltCallback(hi2c);
5584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable EVT, BUF and ERR interrupt */
5590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
5591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Read data from DR */
5593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Increment Buffer pointer */
5596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->pBuffPtr++;
5597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Update counter */
5599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->XferCount--;
5600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
5602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
5603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Call user error callback */
5605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCallback(hi2c);
5607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_ErrorCallback(hi2c);
5609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable BUF interrupt, this help to treat correctly the last 2 bytes
5615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****          on BTF subroutine if there is a reception delay between N-1 and N byte */
5616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 100


5617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle BTF flag for Master receiver
5623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_MasterReceive_BTF(I2C_HandleTypeDef *hi2c)
5628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
5630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions = hi2c->XferOptions;
5631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount == 4U)
5633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable BUF interrupt, this help to treat correctly the last 2 bytes
5635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        on BTF subroutine if there is a reception delay between N-1 and N byte */
5636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
5637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
5639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->XferCount == 3U)
5648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable BUF interrupt, this help to treat correctly the last 2 bytes
5650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****        on BTF subroutine if there is a reception delay between N-1 and N byte */
5651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
5652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
5654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
5656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
5660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->XferCount == 2U)
5669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare next transfer or stop current transfer */
5671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
5672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 101


5674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((CurrentXferOptions == I2C_NEXT_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_NEXT_FR
5677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
5679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP)
5682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
5684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do nothing */
5689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
5692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
5701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT and ERR interrupt */
5710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
5711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
5717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
5730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 102


5731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
5737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
5738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
5746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle SB flag for Master
5749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_SB(I2C_HandleTypeDef *hi2c)
5754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
  29              		.loc 1 5754 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
5755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MEM)
  34              		.loc 1 5755 3 view .LVU1
  35              		.loc 1 5755 11 is_stmt 0 view .LVU2
  36 0000 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
  37 0004 DBB2     		uxtb	r3, r3
  38              		.loc 1 5755 6 view .LVU3
  39 0006 402B     		cmp	r3, #64
  40 0008 10D0     		beq	.L11
5756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->EventCount == 0U)
5758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send slave address */
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
5761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
5765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
  41              		.loc 1 5769 5 is_stmt 1 view .LVU4
  42              		.loc 1 5769 19 is_stmt 0 view .LVU5
  43 000a 0369     		ldr	r3, [r0, #16]
  44              		.loc 1 5769 8 view .LVU6
  45 000c B3F5804F 		cmp	r3, #16384
  46 0010 1BD0     		beq	.L12
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 103


5770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Send slave 7 Bits address */
5772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
5775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
5779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
5783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable DMA Request */
5785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
5786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->EventCount == 0U)
  47              		.loc 1 5790 7 is_stmt 1 view .LVU7
  48              		.loc 1 5790 15 is_stmt 0 view .LVU8
  49 0012 036D     		ldr	r3, [r0, #80]
  50              		.loc 1 5790 10 view .LVU9
  51 0014 002B     		cmp	r3, #0
  52 0016 39D1     		bne	.L10
5791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Send header of slave address */
5793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
  53              		.loc 1 5793 9 is_stmt 1 view .LVU10
  54              		.loc 1 5793 30 is_stmt 0 view .LVU11
  55 0018 436C     		ldr	r3, [r0, #68]
  56 001a C3F3C813 		ubfx	r3, r3, #7, #9
  57              		.loc 1 5793 13 view .LVU12
  58 001e 0268     		ldr	r2, [r0]
  59              		.loc 1 5793 30 view .LVU13
  60 0020 03F00603 		and	r3, r3, #6
  61 0024 43F0F003 		orr	r3, r3, #240
  62              		.loc 1 5793 28 view .LVU14
  63 0028 1361     		str	r3, [r2, #16]
  64 002a 7047     		bx	lr
  65              	.L11:
5757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
  66              		.loc 1 5757 5 is_stmt 1 view .LVU15
5757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
  67              		.loc 1 5757 13 is_stmt 0 view .LVU16
  68 002c 036D     		ldr	r3, [r0, #80]
5757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
  69              		.loc 1 5757 8 view .LVU17
  70 002e 2BB9     		cbnz	r3, .L3
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  71              		.loc 1 5760 7 is_stmt 1 view .LVU18
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  72              		.loc 1 5760 28 is_stmt 0 view .LVU19
  73 0030 436C     		ldr	r3, [r0, #68]
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 104


  74              		.loc 1 5760 11 view .LVU20
  75 0032 0268     		ldr	r2, [r0]
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  76              		.loc 1 5760 28 view .LVU21
  77 0034 03F0FE03 		and	r3, r3, #254
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  78              		.loc 1 5760 26 view .LVU22
  79 0038 1361     		str	r3, [r2, #16]
  80 003a 7047     		bx	lr
  81              	.L3:
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  82              		.loc 1 5764 7 is_stmt 1 view .LVU23
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  83              		.loc 1 5764 28 is_stmt 0 view .LVU24
  84 003c 436C     		ldr	r3, [r0, #68]
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  85              		.loc 1 5764 11 view .LVU25
  86 003e 0268     		ldr	r2, [r0]
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  87              		.loc 1 5764 28 view .LVU26
  88 0040 43F00103 		orr	r3, r3, #1
  89 0044 DBB2     		uxtb	r3, r3
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
  90              		.loc 1 5764 26 view .LVU27
  91 0046 1361     		str	r3, [r2, #16]
  92 0048 7047     		bx	lr
  93              	.L12:
5772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
  94              		.loc 1 5772 7 is_stmt 1 view .LVU28
5772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
  95              		.loc 1 5772 15 is_stmt 0 view .LVU29
  96 004a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
  97 004e DBB2     		uxtb	r3, r3
5772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
  98              		.loc 1 5772 10 view .LVU30
  99 0050 212B     		cmp	r3, #33
 100 0052 0FD0     		beq	.L13
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 101              		.loc 1 5778 9 is_stmt 1 view .LVU31
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 102              		.loc 1 5778 30 is_stmt 0 view .LVU32
 103 0054 436C     		ldr	r3, [r0, #68]
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 104              		.loc 1 5778 13 view .LVU33
 105 0056 0268     		ldr	r2, [r0]
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 106              		.loc 1 5778 30 view .LVU34
 107 0058 43F00103 		orr	r3, r3, #1
 108 005c DBB2     		uxtb	r3, r3
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 109              		.loc 1 5778 28 view .LVU35
 110 005e 1361     		str	r3, [r2, #16]
 111              	.L7:
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 112              		.loc 1 5781 7 is_stmt 1 view .LVU36
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 113              		.loc 1 5781 17 is_stmt 0 view .LVU37
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 105


 114 0060 436B     		ldr	r3, [r0, #52]
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 115              		.loc 1 5781 10 view .LVU38
 116 0062 6BB1     		cbz	r3, .L8
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 117              		.loc 1 5781 51 discriminator 1 view .LVU39
 118 0064 DB6B     		ldr	r3, [r3, #60]
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 119              		.loc 1 5781 35 discriminator 1 view .LVU40
 120 0066 5BB1     		cbz	r3, .L8
 121              	.L9:
5785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 122              		.loc 1 5785 9 is_stmt 1 view .LVU41
 123 0068 0268     		ldr	r2, [r0]
 124 006a 5368     		ldr	r3, [r2, #4]
 125 006c 43F40063 		orr	r3, r3, #2048
 126 0070 5360     		str	r3, [r2, #4]
 127 0072 7047     		bx	lr
 128              	.L13:
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 129              		.loc 1 5774 9 view .LVU42
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 130              		.loc 1 5774 30 is_stmt 0 view .LVU43
 131 0074 436C     		ldr	r3, [r0, #68]
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 132              		.loc 1 5774 13 view .LVU44
 133 0076 0268     		ldr	r2, [r0]
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 134              		.loc 1 5774 30 view .LVU45
 135 0078 03F0FE03 		and	r3, r3, #254
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 136              		.loc 1 5774 28 view .LVU46
 137 007c 1361     		str	r3, [r2, #16]
 138 007e EFE7     		b	.L7
 139              	.L8:
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 140              		.loc 1 5782 20 view .LVU47
 141 0080 836B     		ldr	r3, [r0, #56]
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 142              		.loc 1 5782 11 view .LVU48
 143 0082 33B1     		cbz	r3, .L1
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 144              		.loc 1 5782 54 discriminator 1 view .LVU49
 145 0084 DB6B     		ldr	r3, [r3, #60]
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 146              		.loc 1 5782 38 discriminator 1 view .LVU50
 147 0086 002B     		cmp	r3, #0
 148 0088 EED1     		bne	.L9
 149 008a 02E0     		b	.L1
 150              	.L10:
5794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else if (hi2c->EventCount == 1U)
 151              		.loc 1 5795 12 is_stmt 1 view .LVU51
 152              		.loc 1 5795 20 is_stmt 0 view .LVU52
 153 008c 036D     		ldr	r3, [r0, #80]
 154              		.loc 1 5795 15 view .LVU53
 155 008e 012B     		cmp	r3, #1
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 106


 156 0090 00D0     		beq	.L14
 157              	.L1:
5796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Send header of slave address */
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
5799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Do nothing */
5803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 158              		.loc 1 5806 1 view .LVU54
 159 0092 7047     		bx	lr
 160              	.L14:
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 161              		.loc 1 5798 9 is_stmt 1 view .LVU55
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 162              		.loc 1 5798 30 is_stmt 0 view .LVU56
 163 0094 436C     		ldr	r3, [r0, #68]
 164 0096 C3F3C813 		ubfx	r3, r3, #7, #9
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 165              		.loc 1 5798 13 view .LVU57
 166 009a 0268     		ldr	r2, [r0]
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 167              		.loc 1 5798 30 view .LVU58
 168 009c 03F00603 		and	r3, r3, #6
 169 00a0 43F0F103 		orr	r3, r3, #241
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 170              		.loc 1 5798 28 view .LVU59
 171 00a4 1361     		str	r3, [r2, #16]
5803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 172              		.loc 1 5803 7 is_stmt 1 view .LVU60
 173              		.loc 1 5806 1 is_stmt 0 view .LVU61
 174 00a6 F4E7     		b	.L1
 175              		.cfi_endproc
 176              	.LFE184:
 178              		.section	.text.I2C_Master_ADD10,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	I2C_Master_ADD10:
 186              	.LVL1:
 187              	.LFB185:
5807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle ADD10 flag for Master
5810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_ADD10(I2C_HandleTypeDef *hi2c)
5815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 188              		.loc 1 5815 1 is_stmt 1 view -0
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 107


 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
5816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Send slave address */
5817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 193              		.loc 1 5817 3 view .LVU63
 194              		.loc 1 5817 24 is_stmt 0 view .LVU64
 195 0000 436C     		ldr	r3, [r0, #68]
 196              		.loc 1 5817 7 view .LVU65
 197 0002 0268     		ldr	r2, [r0]
 198 0004 DBB2     		uxtb	r3, r3
 199              		.loc 1 5817 22 view .LVU66
 200 0006 1361     		str	r3, [r2, #16]
5818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 201              		.loc 1 5819 3 is_stmt 1 view .LVU67
 202              		.loc 1 5819 13 is_stmt 0 view .LVU68
 203 0008 436B     		ldr	r3, [r0, #52]
 204              		.loc 1 5819 6 view .LVU69
 205 000a 3BB1     		cbz	r3, .L16
 206              		.loc 1 5819 47 discriminator 1 view .LVU70
 207 000c DB6B     		ldr	r3, [r3, #60]
 208              		.loc 1 5819 31 discriminator 1 view .LVU71
 209 000e 2BB1     		cbz	r3, .L16
 210              	.L17:
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
5821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable DMA Request */
5823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 211              		.loc 1 5823 5 is_stmt 1 view .LVU72
 212 0010 0268     		ldr	r2, [r0]
 213 0012 5368     		ldr	r3, [r2, #4]
 214 0014 43F40063 		orr	r3, r3, #2048
 215 0018 5360     		str	r3, [r2, #4]
 216              	.L15:
5824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 217              		.loc 1 5825 1 is_stmt 0 view .LVU73
 218 001a 7047     		bx	lr
 219              	.L16:
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 220              		.loc 1 5820 16 view .LVU74
 221 001c 836B     		ldr	r3, [r0, #56]
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 222              		.loc 1 5820 7 view .LVU75
 223 001e 002B     		cmp	r3, #0
 224 0020 FBD0     		beq	.L15
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 225              		.loc 1 5820 50 discriminator 1 view .LVU76
 226 0022 DB6B     		ldr	r3, [r3, #60]
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 227              		.loc 1 5820 34 discriminator 1 view .LVU77
 228 0024 002B     		cmp	r3, #0
 229 0026 F3D1     		bne	.L17
 230 0028 F7E7     		b	.L15
 231              		.cfi_endproc
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 108


 232              	.LFE185:
 234              		.section	.text.I2C_Master_ADDR,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	I2C_Master_ADDR:
 242              	.LVL2:
 243              	.LFB186:
5826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle ADDR flag for Master
5829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Master_ADDR(I2C_HandleTypeDef *hi2c)
5834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 244              		.loc 1 5834 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 40
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              		.loc 1 5834 1 is_stmt 0 view .LVU79
 250 0000 10B4     		push	{r4}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 4, -4
 253 0002 8BB0     		sub	sp, sp, #44
 254              		.cfi_def_cfa_offset 48
5835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
5836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 255              		.loc 1 5836 3 is_stmt 1 view .LVU80
 256              		.loc 1 5836 23 is_stmt 0 view .LVU81
 257 0004 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 258 0008 DAB2     		uxtb	r2, r3
 259              	.LVL3:
5837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions           = hi2c->XferOptions;
 260              		.loc 1 5837 3 is_stmt 1 view .LVU82
 261              		.loc 1 5837 12 is_stmt 0 view .LVU83
 262 000a C16A     		ldr	r1, [r0, #44]
 263              	.LVL4:
5838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t Prev_State                   = hi2c->PreviousState;
 264              		.loc 1 5838 3 is_stmt 1 view .LVU84
 265              		.loc 1 5838 12 is_stmt 0 view .LVU85
 266 000c 046B     		ldr	r4, [r0, #48]
 267              	.LVL5:
5839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 268              		.loc 1 5840 3 is_stmt 1 view .LVU86
 269              		.loc 1 5840 11 is_stmt 0 view .LVU87
 270 000e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 271 0012 DBB2     		uxtb	r3, r3
 272              		.loc 1 5840 6 view .LVU88
 273 0014 222B     		cmp	r3, #34
 274 0016 0BD0     		beq	.L41
5841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 109


5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
5843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
5848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear ADDR flag */
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Restart */
5853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
5854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->EventCount++;
5856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
5858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferCount == 0U)
5860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR flag */
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
5865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else if (hi2c->XferCount == 1U)
5868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
5870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
5872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
5875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
5876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Disable Acknowledge */
5877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Clear ADDR flag */
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
5882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           else
5883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
5884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Clear ADDR flag */
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Generate Stop */
5888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
5890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Prepare next transfer or stop current transfer */
5892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAS
5893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                  && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_F
5894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_F
5896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
5897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Disable Acknowledge */
5898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 110


5899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
5900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           else
5901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
5902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             /* Enable Acknowledge */
5903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****             SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
5905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Clear ADDR flag */
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
5910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
5912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Clear ADDR flag */
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Generate Stop */
5918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
5919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else if (hi2c->XferCount == 2U)
5922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRA
5924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Disable Acknowledge */
5926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Pos */
5929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
5930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         else
5932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Acknowledge */
5934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C
5938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Last DMA bit */
5940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
5941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
5942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR flag */
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
5947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
5948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Enable Acknowledge */
5949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
5950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C
5952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
5953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Enable Last DMA bit */
5954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
5955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 111


5956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Clear ADDR flag */
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
5959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
5960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Reset Event counter  */
5962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->EventCount = 0U;
5963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
5964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
5966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
5968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 275              		.loc 1 5968 5 is_stmt 1 view .LVU89
 276              	.LBB2:
 277              		.loc 1 5968 5 view .LVU90
 278 0018 0023     		movs	r3, #0
 279 001a 0993     		str	r3, [sp, #36]
 280              		.loc 1 5968 5 view .LVU91
 281 001c 0368     		ldr	r3, [r0]
 282 001e 5A69     		ldr	r2, [r3, #20]
 283              	.LVL6:
 284              		.loc 1 5968 5 is_stmt 0 view .LVU92
 285 0020 0992     		str	r2, [sp, #36]
 286              		.loc 1 5968 5 is_stmt 1 view .LVU93
 287 0022 9B69     		ldr	r3, [r3, #24]
 288 0024 0993     		str	r3, [sp, #36]
 289              		.loc 1 5968 5 view .LVU94
 290 0026 099B     		ldr	r3, [sp, #36]
 291              	.LBE2:
 292              		.loc 1 5968 5 view .LVU95
 293              	.L19:
5969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
5970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 294              		.loc 1 5970 1 is_stmt 0 view .LVU96
 295 0028 0BB0     		add	sp, sp, #44
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 4
 298              		@ sp needed
 299 002a 5DF8044B 		ldr	r4, [sp], #4
 300              		.cfi_restore 4
 301              		.cfi_def_cfa_offset 0
 302              	.LVL7:
 303              		.loc 1 5970 1 view .LVU97
 304 002e 7047     		bx	lr
 305              	.LVL8:
 306              	.L41:
 307              		.cfi_restore_state
5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 308              		.loc 1 5842 5 is_stmt 1 view .LVU98
5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 309              		.loc 1 5842 14 is_stmt 0 view .LVU99
 310 0030 036D     		ldr	r3, [r0, #80]
5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 311              		.loc 1 5842 8 view .LVU100
 312 0032 0BB9     		cbnz	r3, .L21
5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 112


 313              		.loc 1 5842 34 discriminator 1 view .LVU101
 314 0034 402A     		cmp	r2, #64
 315 0036 17D0     		beq	.L42
 316              	.L21:
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 317              		.loc 1 5847 10 is_stmt 1 view .LVU102
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 318              		.loc 1 5847 19 is_stmt 0 view .LVU103
 319 0038 036D     		ldr	r3, [r0, #80]
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 320              		.loc 1 5847 13 view .LVU104
 321 003a 1BB9     		cbnz	r3, .L23
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 322              		.loc 1 5847 53 discriminator 1 view .LVU105
 323 003c 0369     		ldr	r3, [r0, #16]
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 324              		.loc 1 5847 39 discriminator 1 view .LVU106
 325 003e B3F5404F 		cmp	r3, #49152
 326 0042 19D0     		beq	.L43
 327              	.L23:
5859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 328              		.loc 1 5859 7 is_stmt 1 view .LVU107
5859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 329              		.loc 1 5859 15 is_stmt 0 view .LVU108
 330 0044 438D     		ldrh	r3, [r0, #42]
 331 0046 9BB2     		uxth	r3, r3
5859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 332              		.loc 1 5859 10 view .LVU109
 333 0048 002B     		cmp	r3, #0
 334 004a 25D1     		bne	.L24
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 335              		.loc 1 5862 9 is_stmt 1 view .LVU110
 336              	.LBB3:
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 337              		.loc 1 5862 9 view .LVU111
 338 004c 0293     		str	r3, [sp, #8]
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 339              		.loc 1 5862 9 view .LVU112
 340 004e 0368     		ldr	r3, [r0]
 341 0050 5A69     		ldr	r2, [r3, #20]
 342              	.LVL9:
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 343              		.loc 1 5862 9 is_stmt 0 view .LVU113
 344 0052 0292     		str	r2, [sp, #8]
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 345              		.loc 1 5862 9 is_stmt 1 view .LVU114
 346 0054 9A69     		ldr	r2, [r3, #24]
 347 0056 0292     		str	r2, [sp, #8]
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 348              		.loc 1 5862 9 view .LVU115
 349 0058 029A     		ldr	r2, [sp, #8]
 350              	.LBE3:
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 351              		.loc 1 5862 9 view .LVU116
5865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 352              		.loc 1 5865 9 view .LVU117
 353 005a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 113


 354 005c 42F40072 		orr	r2, r2, #512
 355 0060 1A60     		str	r2, [r3]
 356              	.L25:
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 357              		.loc 1 5958 9 discriminator 1 view .LVU118
5962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 358              		.loc 1 5962 7 discriminator 1 view .LVU119
5962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 359              		.loc 1 5962 24 is_stmt 0 discriminator 1 view .LVU120
 360 0062 0023     		movs	r3, #0
 361 0064 0365     		str	r3, [r0, #80]
 362 0066 DFE7     		b	.L19
 363              	.LVL10:
 364              	.L42:
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 365              		.loc 1 5845 7 is_stmt 1 view .LVU121
 366              	.LBB4:
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 367              		.loc 1 5845 7 view .LVU122
 368 0068 0093     		str	r3, [sp]
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 369              		.loc 1 5845 7 view .LVU123
 370 006a 0368     		ldr	r3, [r0]
 371 006c 5A69     		ldr	r2, [r3, #20]
 372              	.LVL11:
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 373              		.loc 1 5845 7 is_stmt 0 view .LVU124
 374 006e 0092     		str	r2, [sp]
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 375              		.loc 1 5845 7 is_stmt 1 view .LVU125
 376 0070 9B69     		ldr	r3, [r3, #24]
 377 0072 0093     		str	r3, [sp]
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 378              		.loc 1 5845 7 view .LVU126
 379 0074 009B     		ldr	r3, [sp]
 380              	.LBE4:
5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 381              		.loc 1 5845 7 view .LVU127
 382 0076 D7E7     		b	.L19
 383              	.LVL12:
 384              	.L43:
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 385              		.loc 1 5850 7 view .LVU128
 386              	.LBB5:
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 387              		.loc 1 5850 7 view .LVU129
 388 0078 0023     		movs	r3, #0
 389 007a 0193     		str	r3, [sp, #4]
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 390              		.loc 1 5850 7 view .LVU130
 391 007c 0368     		ldr	r3, [r0]
 392 007e 5A69     		ldr	r2, [r3, #20]
 393              	.LVL13:
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 394              		.loc 1 5850 7 is_stmt 0 view .LVU131
 395 0080 0192     		str	r2, [sp, #4]
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 114


 396              		.loc 1 5850 7 is_stmt 1 view .LVU132
 397 0082 9A69     		ldr	r2, [r3, #24]
 398 0084 0192     		str	r2, [sp, #4]
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 399              		.loc 1 5850 7 view .LVU133
 400 0086 019A     		ldr	r2, [sp, #4]
 401              	.LBE5:
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 402              		.loc 1 5850 7 view .LVU134
5853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 403              		.loc 1 5853 7 view .LVU135
 404 0088 1A68     		ldr	r2, [r3]
 405 008a 42F48072 		orr	r2, r2, #256
 406 008e 1A60     		str	r2, [r3]
5855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 407              		.loc 1 5855 7 view .LVU136
5855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 408              		.loc 1 5855 11 is_stmt 0 view .LVU137
 409 0090 036D     		ldr	r3, [r0, #80]
5855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 410              		.loc 1 5855 23 view .LVU138
 411 0092 0133     		adds	r3, r3, #1
 412 0094 0365     		str	r3, [r0, #80]
 413 0096 C7E7     		b	.L19
 414              	.LVL14:
 415              	.L24:
5867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 416              		.loc 1 5867 12 is_stmt 1 view .LVU139
5867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 417              		.loc 1 5867 20 is_stmt 0 view .LVU140
 418 0098 438D     		ldrh	r3, [r0, #42]
 419 009a 9BB2     		uxth	r3, r3
5867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 420              		.loc 1 5867 15 view .LVU141
 421 009c 012B     		cmp	r3, #1
 422 009e 25D0     		beq	.L44
5921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 423              		.loc 1 5921 12 is_stmt 1 view .LVU142
5921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 424              		.loc 1 5921 20 is_stmt 0 view .LVU143
 425 00a0 438D     		ldrh	r3, [r0, #42]
 426 00a2 9BB2     		uxth	r3, r3
5921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 427              		.loc 1 5921 15 view .LVU144
 428 00a4 022B     		cmp	r3, #2
 429 00a6 7BD0     		beq	.L45
5949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 430              		.loc 1 5949 9 is_stmt 1 view .LVU145
 431 00a8 0268     		ldr	r2, [r0]
 432              	.LVL15:
5949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 433              		.loc 1 5949 9 is_stmt 0 view .LVU146
 434 00aa 1368     		ldr	r3, [r2]
 435 00ac 43F48063 		orr	r3, r3, #1024
 436 00b0 1360     		str	r3, [r2]
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 437              		.loc 1 5951 9 is_stmt 1 view .LVU147
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 115


5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 438              		.loc 1 5951 19 is_stmt 0 view .LVU148
 439 00b2 0368     		ldr	r3, [r0]
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 440              		.loc 1 5951 29 view .LVU149
 441 00b4 5A68     		ldr	r2, [r3, #4]
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 442              		.loc 1 5951 12 view .LVU150
 443 00b6 12F4006F 		tst	r2, #2048
 444 00ba 0ED0     		beq	.L38
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 445              		.loc 1 5951 70 discriminator 1 view .LVU151
 446 00bc 11F5803F 		cmn	r1, #65536
 447 00c0 07D0     		beq	.L39
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 448              		.loc 1 5951 118 discriminator 2 view .LVU152
 449 00c2 0129     		cmp	r1, #1
 450 00c4 05D0     		beq	.L39
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 451              		.loc 1 5951 161 discriminator 3 view .LVU153
 452 00c6 0829     		cmp	r1, #8
 453 00c8 03D0     		beq	.L39
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 454              		.loc 1 5951 213 discriminator 4 view .LVU154
 455 00ca 1029     		cmp	r1, #16
 456 00cc 01D0     		beq	.L39
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 457              		.loc 1 5951 263 discriminator 5 view .LVU155
 458 00ce 2029     		cmp	r1, #32
 459 00d0 03D1     		bne	.L38
 460              	.L39:
5954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 461              		.loc 1 5954 11 is_stmt 1 view .LVU156
 462 00d2 5A68     		ldr	r2, [r3, #4]
 463 00d4 42F48052 		orr	r2, r2, #4096
 464 00d8 5A60     		str	r2, [r3, #4]
 465              	.L38:
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 466              		.loc 1 5958 9 view .LVU157
 467              	.LBB6:
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 468              		.loc 1 5958 9 view .LVU158
 469 00da 0023     		movs	r3, #0
 470 00dc 0893     		str	r3, [sp, #32]
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 471              		.loc 1 5958 9 view .LVU159
 472 00de 0368     		ldr	r3, [r0]
 473 00e0 5A69     		ldr	r2, [r3, #20]
 474 00e2 0892     		str	r2, [sp, #32]
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 475              		.loc 1 5958 9 view .LVU160
 476 00e4 9B69     		ldr	r3, [r3, #24]
 477 00e6 0893     		str	r3, [sp, #32]
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 478              		.loc 1 5958 9 view .LVU161
 479 00e8 089B     		ldr	r3, [sp, #32]
 480 00ea BAE7     		b	.L25
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 116


 481              	.LVL16:
 482              	.L44:
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 483              		.loc 1 5958 9 is_stmt 0 view .LVU162
 484              	.LBE6:
5869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 485              		.loc 1 5869 9 is_stmt 1 view .LVU163
5869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 486              		.loc 1 5869 12 is_stmt 0 view .LVU164
 487 00ec 11F5803F 		cmn	r1, #65536
 488 00f0 11D0     		beq	.L46
5892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                  && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_F
 489              		.loc 1 5892 14 is_stmt 1 view .LVU165
5892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                  && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_F
 490              		.loc 1 5892 17 is_stmt 0 view .LVU166
 491 00f2 0829     		cmp	r1, #8
 492 00f4 34D0     		beq	.L29
5892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****                  && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_F
 493              		.loc 1 5892 67 discriminator 1 view .LVU167
 494 00f6 2029     		cmp	r1, #32
 495 00f8 32D0     		beq	.L29
5893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 496              		.loc 1 5893 18 view .LVU168
 497 00fa 122C     		cmp	r4, #18
 498 00fc 2ED0     		beq	.L47
 499              	.L30:
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 500              		.loc 1 5895 11 is_stmt 1 view .LVU169
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 501              		.loc 1 5895 14 is_stmt 0 view .LVU170
 502 00fe 0429     		cmp	r1, #4
 503 0100 40D0     		beq	.L31
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 504              		.loc 1 5895 54 discriminator 1 view .LVU171
 505 0102 0229     		cmp	r1, #2
 506 0104 3ED0     		beq	.L31
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 507              		.loc 1 5895 106 discriminator 2 view .LVU172
 508 0106 1029     		cmp	r1, #16
 509 0108 3CD0     		beq	.L31
5898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 510              		.loc 1 5898 13 is_stmt 1 view .LVU173
 511 010a 0268     		ldr	r2, [r0]
 512              	.LVL17:
5898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 513              		.loc 1 5898 13 is_stmt 0 view .LVU174
 514 010c 1368     		ldr	r3, [r2]
 515 010e 23F48063 		bic	r3, r3, #1024
 516 0112 1360     		str	r3, [r2]
 517 0114 3BE0     		b	.L32
 518              	.LVL18:
 519              	.L46:
5872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 520              		.loc 1 5872 11 is_stmt 1 view .LVU175
 521 0116 0268     		ldr	r2, [r0]
 522              	.LVL19:
5872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 117


 523              		.loc 1 5872 11 is_stmt 0 view .LVU176
 524 0118 1368     		ldr	r3, [r2]
 525 011a 23F48063 		bic	r3, r3, #1024
 526 011e 1360     		str	r3, [r2]
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 527              		.loc 1 5874 11 is_stmt 1 view .LVU177
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 528              		.loc 1 5874 20 is_stmt 0 view .LVU178
 529 0120 0368     		ldr	r3, [r0]
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 530              		.loc 1 5874 30 view .LVU179
 531 0122 5A68     		ldr	r2, [r3, #4]
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           {
 532              		.loc 1 5874 14 view .LVU180
 533 0124 12F4006F 		tst	r2, #2048
 534 0128 0CD0     		beq	.L28
5877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 535              		.loc 1 5877 13 is_stmt 1 view .LVU181
 536 012a 1A68     		ldr	r2, [r3]
 537 012c 22F48062 		bic	r2, r2, #1024
 538 0130 1A60     		str	r2, [r3]
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 539              		.loc 1 5880 13 view .LVU182
 540              	.LBB7:
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 541              		.loc 1 5880 13 view .LVU183
 542 0132 0023     		movs	r3, #0
 543 0134 0393     		str	r3, [sp, #12]
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 544              		.loc 1 5880 13 view .LVU184
 545 0136 0368     		ldr	r3, [r0]
 546 0138 5A69     		ldr	r2, [r3, #20]
 547 013a 0392     		str	r2, [sp, #12]
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 548              		.loc 1 5880 13 view .LVU185
 549 013c 9B69     		ldr	r3, [r3, #24]
 550 013e 0393     		str	r3, [sp, #12]
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 551              		.loc 1 5880 13 view .LVU186
 552 0140 039B     		ldr	r3, [sp, #12]
 553              	.LBE7:
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 554              		.loc 1 5880 13 view .LVU187
 555 0142 8EE7     		b	.L25
 556              	.L28:
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 557              		.loc 1 5885 13 view .LVU188
 558              	.LBB8:
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 559              		.loc 1 5885 13 view .LVU189
 560 0144 0022     		movs	r2, #0
 561 0146 0492     		str	r2, [sp, #16]
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 562              		.loc 1 5885 13 view .LVU190
 563 0148 5A69     		ldr	r2, [r3, #20]
 564 014a 0492     		str	r2, [sp, #16]
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 118


 565              		.loc 1 5885 13 view .LVU191
 566 014c 9A69     		ldr	r2, [r3, #24]
 567 014e 0492     		str	r2, [sp, #16]
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 568              		.loc 1 5885 13 view .LVU192
 569 0150 049A     		ldr	r2, [sp, #16]
 570              	.LBE8:
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 571              		.loc 1 5885 13 view .LVU193
5888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 572              		.loc 1 5888 13 view .LVU194
 573 0152 1A68     		ldr	r2, [r3]
 574 0154 42F40072 		orr	r2, r2, #512
 575 0158 1A60     		str	r2, [r3]
 576 015a 82E7     		b	.L25
 577              	.LVL20:
 578              	.L47:
5893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 579              		.loc 1 5893 63 is_stmt 0 discriminator 1 view .LVU195
 580 015c 0129     		cmp	r1, #1
 581 015e CED0     		beq	.L30
 582              	.L29:
5912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 583              		.loc 1 5912 11 is_stmt 1 view .LVU196
 584 0160 0268     		ldr	r2, [r0]
 585              	.LVL21:
5912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 586              		.loc 1 5912 11 is_stmt 0 view .LVU197
 587 0162 1368     		ldr	r3, [r2]
 588 0164 23F48063 		bic	r3, r3, #1024
 589 0168 1360     		str	r3, [r2]
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 590              		.loc 1 5915 11 is_stmt 1 view .LVU198
 591              	.LBB9:
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 592              		.loc 1 5915 11 view .LVU199
 593 016a 0023     		movs	r3, #0
 594 016c 0693     		str	r3, [sp, #24]
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 595              		.loc 1 5915 11 view .LVU200
 596 016e 0368     		ldr	r3, [r0]
 597 0170 5A69     		ldr	r2, [r3, #20]
 598 0172 0692     		str	r2, [sp, #24]
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 599              		.loc 1 5915 11 view .LVU201
 600 0174 9A69     		ldr	r2, [r3, #24]
 601 0176 0692     		str	r2, [sp, #24]
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 602              		.loc 1 5915 11 view .LVU202
 603 0178 069A     		ldr	r2, [sp, #24]
 604              	.LBE9:
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 605              		.loc 1 5915 11 view .LVU203
5918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 606              		.loc 1 5918 11 view .LVU204
 607 017a 1A68     		ldr	r2, [r3]
 608 017c 42F40072 		orr	r2, r2, #512
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 119


 609 0180 1A60     		str	r2, [r3]
 610 0182 6EE7     		b	.L25
 611              	.LVL22:
 612              	.L31:
5903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 613              		.loc 1 5903 13 view .LVU205
 614 0184 0268     		ldr	r2, [r0]
 615              	.LVL23:
5903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           }
 616              		.loc 1 5903 13 is_stmt 0 view .LVU206
 617 0186 1368     		ldr	r3, [r2]
 618 0188 43F48063 		orr	r3, r3, #1024
 619 018c 1360     		str	r3, [r2]
 620              	.L32:
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 621              		.loc 1 5907 11 is_stmt 1 view .LVU207
 622              	.LBB10:
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 623              		.loc 1 5907 11 view .LVU208
 624 018e 0023     		movs	r3, #0
 625 0190 0593     		str	r3, [sp, #20]
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 626              		.loc 1 5907 11 view .LVU209
 627 0192 0368     		ldr	r3, [r0]
 628 0194 5A69     		ldr	r2, [r3, #20]
 629 0196 0592     		str	r2, [sp, #20]
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 630              		.loc 1 5907 11 view .LVU210
 631 0198 9B69     		ldr	r3, [r3, #24]
 632 019a 0593     		str	r3, [sp, #20]
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 633              		.loc 1 5907 11 view .LVU211
 634 019c 059B     		ldr	r3, [sp, #20]
 635              	.LBE10:
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 636              		.loc 1 5907 11 view .LVU212
 637 019e 60E7     		b	.L25
 638              	.LVL24:
 639              	.L45:
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 640              		.loc 1 5923 9 view .LVU213
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 641              		.loc 1 5923 12 is_stmt 0 view .LVU214
 642 01a0 0429     		cmp	r1, #4
 643 01a2 0ED0     		beq	.L34
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 644              		.loc 1 5923 52 discriminator 1 view .LVU215
 645 01a4 0229     		cmp	r1, #2
 646 01a6 0CD0     		beq	.L34
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 647              		.loc 1 5923 104 discriminator 2 view .LVU216
 648 01a8 1029     		cmp	r1, #16
 649 01aa 0AD0     		beq	.L34
5926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 650              		.loc 1 5926 11 is_stmt 1 view .LVU217
 651 01ac 0268     		ldr	r2, [r0]
 652              	.LVL25:
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 120


5926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 653              		.loc 1 5926 11 is_stmt 0 view .LVU218
 654 01ae 1368     		ldr	r3, [r2]
 655 01b0 23F48063 		bic	r3, r3, #1024
 656 01b4 1360     		str	r3, [r2]
5929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 657              		.loc 1 5929 11 is_stmt 1 view .LVU219
 658 01b6 0268     		ldr	r2, [r0]
 659 01b8 1368     		ldr	r3, [r2]
 660 01ba 43F40063 		orr	r3, r3, #2048
 661 01be 1360     		str	r3, [r2]
 662 01c0 04E0     		b	.L35
 663              	.LVL26:
 664              	.L34:
5934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 665              		.loc 1 5934 11 view .LVU220
 666 01c2 0268     		ldr	r2, [r0]
 667              	.LVL27:
5934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 668              		.loc 1 5934 11 is_stmt 0 view .LVU221
 669 01c4 1368     		ldr	r3, [r2]
 670 01c6 43F48063 		orr	r3, r3, #1024
 671 01ca 1360     		str	r3, [r2]
 672              	.L35:
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 673              		.loc 1 5937 9 is_stmt 1 view .LVU222
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 674              		.loc 1 5937 19 is_stmt 0 view .LVU223
 675 01cc 0368     		ldr	r3, [r0]
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 676              		.loc 1 5937 29 view .LVU224
 677 01ce 5A68     		ldr	r2, [r3, #4]
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 678              		.loc 1 5937 12 view .LVU225
 679 01d0 12F4006F 		tst	r2, #2048
 680 01d4 0ED0     		beq	.L36
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 681              		.loc 1 5937 70 discriminator 1 view .LVU226
 682 01d6 11F5803F 		cmn	r1, #65536
 683 01da 07D0     		beq	.L37
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 684              		.loc 1 5937 118 discriminator 2 view .LVU227
 685 01dc 0129     		cmp	r1, #1
 686 01de 05D0     		beq	.L37
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 687              		.loc 1 5937 161 discriminator 3 view .LVU228
 688 01e0 0829     		cmp	r1, #8
 689 01e2 03D0     		beq	.L37
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 690              		.loc 1 5937 213 discriminator 4 view .LVU229
 691 01e4 1029     		cmp	r1, #16
 692 01e6 01D0     		beq	.L37
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
 693              		.loc 1 5937 263 discriminator 5 view .LVU230
 694 01e8 2029     		cmp	r1, #32
 695 01ea 03D1     		bne	.L36
 696              	.L37:
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 121


5940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
 697              		.loc 1 5940 11 is_stmt 1 view .LVU231
 698 01ec 5A68     		ldr	r2, [r3, #4]
 699 01ee 42F48052 		orr	r2, r2, #4096
 700 01f2 5A60     		str	r2, [r3, #4]
 701              	.L36:
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 702              		.loc 1 5944 9 view .LVU232
 703              	.LBB11:
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 704              		.loc 1 5944 9 view .LVU233
 705 01f4 0023     		movs	r3, #0
 706 01f6 0793     		str	r3, [sp, #28]
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 707              		.loc 1 5944 9 view .LVU234
 708 01f8 0368     		ldr	r3, [r0]
 709 01fa 5A69     		ldr	r2, [r3, #20]
 710 01fc 0792     		str	r2, [sp, #28]
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 711              		.loc 1 5944 9 view .LVU235
 712 01fe 9B69     		ldr	r3, [r3, #24]
 713 0200 0793     		str	r3, [sp, #28]
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 714              		.loc 1 5944 9 view .LVU236
 715 0202 079B     		ldr	r3, [sp, #28]
 716              	.LBE11:
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 717              		.loc 1 5944 9 view .LVU237
 718 0204 2DE7     		b	.L25
 719              		.cfi_endproc
 720              	.LFE186:
 722              		.section	.text.I2C_SlaveTransmit_BTF,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	I2C_SlaveTransmit_BTF:
 730              	.LVL28:
 731              	.LFB188:
5971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
5973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle TXE flag for Slave
5974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
5976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
5977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
5978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveTransmit_TXE(I2C_HandleTypeDef *hi2c)
5979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
5980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
5981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
5982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
5985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Write data to DR */
5986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = *hi2c->pBuffPtr;
5987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 122


5988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
5992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
5993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
5995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
5996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Last Byte is received, disable Interrupt */
5997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
5998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
5999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set state at HAL_I2C_STATE_LISTEN */
6000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
6001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
6002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->SlaveTxCpltCallback(hi2c);
6006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_SlaveTxCpltCallback(hi2c);
6008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle BTF flag for Slave transmitter
6015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveTransmit_BTF(I2C_HandleTypeDef *hi2c)
6020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 732              		.loc 1 6020 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
6021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
 737              		.loc 1 6021 3 view .LVU239
 738              		.loc 1 6021 11 is_stmt 0 view .LVU240
 739 0000 438D     		ldrh	r3, [r0, #42]
 740 0002 9BB2     		uxth	r3, r3
 741              		.loc 1 6021 6 view .LVU241
 742 0004 5BB1     		cbz	r3, .L48
6022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Write data to DR */
6024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = *hi2c->pBuffPtr;
 743              		.loc 1 6024 5 is_stmt 1 view .LVU242
 744              		.loc 1 6024 31 is_stmt 0 view .LVU243
 745 0006 426A     		ldr	r2, [r0, #36]
 746              		.loc 1 6024 9 view .LVU244
 747 0008 0368     		ldr	r3, [r0]
 748              		.loc 1 6024 26 view .LVU245
 749 000a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 750              		.loc 1 6024 24 view .LVU246
 751 000c 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 123


6025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
6027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
 752              		.loc 1 6027 5 is_stmt 1 view .LVU247
 753              		.loc 1 6027 9 is_stmt 0 view .LVU248
 754 000e 436A     		ldr	r3, [r0, #36]
 755              		.loc 1 6027 19 view .LVU249
 756 0010 0133     		adds	r3, r3, #1
 757 0012 4362     		str	r3, [r0, #36]
6028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
6030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
 758              		.loc 1 6030 5 is_stmt 1 view .LVU250
 759              		.loc 1 6030 9 is_stmt 0 view .LVU251
 760 0014 438D     		ldrh	r3, [r0, #42]
 761 0016 9BB2     		uxth	r3, r3
 762              		.loc 1 6030 20 view .LVU252
 763 0018 013B     		subs	r3, r3, #1
 764 001a 9BB2     		uxth	r3, r3
 765 001c 4385     		strh	r3, [r0, #42]	@ movhi
 766              	.L48:
6031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 767              		.loc 1 6032 1 view .LVU253
 768 001e 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE188:
 772              		.section	.text.I2C_SlaveReceive_BTF,"ax",%progbits
 773              		.align	1
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	I2C_SlaveReceive_BTF:
 780              	.LVL29:
 781              	.LFB190:
6033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle RXNE flag for Slave
6036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveReceive_RXNE(I2C_HandleTypeDef *hi2c)
6041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
6043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
6044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
6046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
6048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
6051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
6052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 124


6054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
6055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
6057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Last Byte is received, disable Interrupt */
6059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
6060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set state at HAL_I2C_STATE_LISTEN */
6062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
6063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
6064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->SlaveRxCpltCallback(hi2c);
6068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_SlaveRxCpltCallback(hi2c);
6070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle BTF flag for Slave receiver
6077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_SlaveReceive_BTF(I2C_HandleTypeDef *hi2c)
6082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 782              		.loc 1 6082 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
6083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
 787              		.loc 1 6083 3 view .LVU255
 788              		.loc 1 6083 11 is_stmt 0 view .LVU256
 789 0000 438D     		ldrh	r3, [r0, #42]
 790 0002 9BB2     		uxth	r3, r3
 791              		.loc 1 6083 6 view .LVU257
 792 0004 5BB1     		cbz	r3, .L50
6084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Read data from DR */
6086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 793              		.loc 1 6086 5 is_stmt 1 view .LVU258
 794              		.loc 1 6086 36 is_stmt 0 view .LVU259
 795 0006 0368     		ldr	r3, [r0]
 796              		.loc 1 6086 46 view .LVU260
 797 0008 1A69     		ldr	r2, [r3, #16]
 798              		.loc 1 6086 10 view .LVU261
 799 000a 436A     		ldr	r3, [r0, #36]
 800              		.loc 1 6086 21 view .LVU262
 801 000c 1A70     		strb	r2, [r3]
6087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Increment Buffer pointer */
6089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
 802              		.loc 1 6089 5 is_stmt 1 view .LVU263
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 125


 803              		.loc 1 6089 9 is_stmt 0 view .LVU264
 804 000e 436A     		ldr	r3, [r0, #36]
 805              		.loc 1 6089 19 view .LVU265
 806 0010 0133     		adds	r3, r3, #1
 807 0012 4362     		str	r3, [r0, #36]
6090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Update counter */
6092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount--;
 808              		.loc 1 6092 5 is_stmt 1 view .LVU266
 809              		.loc 1 6092 9 is_stmt 0 view .LVU267
 810 0014 438D     		ldrh	r3, [r0, #42]
 811 0016 9BB2     		uxth	r3, r3
 812              		.loc 1 6092 20 view .LVU268
 813 0018 013B     		subs	r3, r3, #1
 814 001a 9BB2     		uxth	r3, r3
 815 001c 4385     		strh	r3, [r0, #42]	@ movhi
 816              	.L50:
6093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 817              		.loc 1 6094 1 view .LVU269
 818 001e 7047     		bx	lr
 819              		.cfi_endproc
 820              	.LFE190:
 822              		.section	.text.I2C_WaitOnSTOPRequestThroughIT,"ax",%progbits
 823              		.align	1
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv4-sp-d16
 829              	I2C_WaitOnSTOPRequestThroughIT:
 830              	.LVL30:
 831              	.LFB207:
6095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle ADD flag for Slave
6098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  IT2Flags Interrupt2 flags to handle.
6101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_ADDR(I2C_HandleTypeDef *hi2c, uint32_t IT2Flags)
6104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
6106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint16_t SlaveAddrCode;
6107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
6109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable BUF interrupt, BUF enabling is manage through slave specific interface */
6111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
6112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Transfer Direction requested by Master */
6114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
6115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       TransferDirection = I2C_DIRECTION_TRANSMIT;
6117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 126


6120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
6122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
6124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
6126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
6129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call Slave Addr callback */
6132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
6134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
6136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
6141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
6142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
6144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Handle STOPF flag for Slave
6150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_STOPF(I2C_HandleTypeDef *hi2c)
6155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
6157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
6158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable EVT, BUF and ERR interrupt */
6160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
6161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear STOPF flag */
6163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_STOPFLAG(hi2c);
6164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable Acknowledge */
6166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
6169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
6170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
6172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
6174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferCount != 0U)
6176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 127


6177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
6178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable, stop the current DMA */
6182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
6183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
6185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
6186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA Abort callback :
6188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
6190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA RX */
6192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
6193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
6194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Call Directly XferAbortCallback function in case of error */
6195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
6196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
6197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
6200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
6202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->XferCount != 0U)
6204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
6206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable, stop the current DMA */
6210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
6211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
6213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
6214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Set the I2C DMA Abort callback :
6216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
6218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Abort DMA TX */
6220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
6221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
6222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Call Directly XferAbortCallback function in case of error */
6223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
6224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
6225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
6230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
6231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Store Last receive data if any */
6233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 128


6234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
6236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
6239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
6240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
6242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
6243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Store Last receive data if any */
6246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
6247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
6249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
6252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
6253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Update counter */
6255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferCount--;
6256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
6259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
6261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
6266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     I2C_ITError(hi2c);
6269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
6273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set state at HAL_I2C_STATE_LISTEN */
6275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
6276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
6277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->SlaveRxCpltCallback(hi2c);
6281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_SlaveRxCpltCallback(hi2c);
6283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
6287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->XferOptions = I2C_NO_OPTION_FRAME;
6289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
6290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 129


6291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
6294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ListenCpltCallback(hi2c);
6296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_ListenCpltCallback(hi2c);
6298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
6301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_
6303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState = I2C_STATE_NONE;
6305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback(hi2c);
6310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_SlaveRxCpltCallback(hi2c);
6312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_Slave_AF(I2C_HandleTypeDef *hi2c)
6324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variables to prevent undefined behavior of volatile usage */
6326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
6327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions       = hi2c->XferOptions;
6328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((CurrentXferOptions ==  I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME))
6330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       (CurrentState == HAL_I2C_STATE_LISTEN))
6331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
6333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT, BUF and ERR interrupt */
6335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
6336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear AF flag */
6338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Acknowledge */
6341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
6345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode          = HAL_I2C_MODE_NONE;
6346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 130


6348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
6350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
6352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (CurrentState == HAL_I2C_STATE_BUSY_TX)
6355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
6357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
6358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
6359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode          = HAL_I2C_MODE_NONE;
6360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT, BUF and ERR interrupt */
6362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
6363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear AF flag */
6365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Acknowledge */
6368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
6372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
6374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear AF flag only */
6379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* State Listen, but XferOptions == FIRST or NEXT */
6380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  I2C interrupts error process
6386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c)
6390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
6392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
6393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
6394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentError;
6395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState 
6397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Pos bit in I2C CR1 when error occurred in Master/Mem Receive IT Process */
6399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_POS;
6400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
6403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 131


6405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
6407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* If state is an abort treatment on going, don't change state */
6411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* This change will be do later */
6412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C
6413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Abort DMA transfer */
6421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
6422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
6424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
6426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA Abort callback :
6428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
6430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
6432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable I2C peripheral to prevent dummy data in buffer */
6434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE(hi2c);
6435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
6439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
6440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
6443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set the DMA Abort callback :
6445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
6446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
6447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
6449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Store Last receive data if any */
6451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
6452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         {
6453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Read data from DR */
6454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           /* Increment Buffer pointer */
6457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
6458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         }
6459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Disable I2C peripheral to prevent dummy data in buffer */
6461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_I2C_DISABLE(hi2c);
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 132


6462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
6466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
6467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_ABORT)
6471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Store Last receive data if any */
6476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
6477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
6479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
6482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
6483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable I2C peripheral to prevent dummy data in buffer */
6486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE(hi2c);
6487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
6491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
6493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Store Last receive data if any */
6498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
6499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Read data from DR */
6501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
6502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Increment Buffer pointer */
6504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
6505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call user error callback */
6508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
6510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
6512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* STOP Flag is not set after a NACK reception, BusError, ArbitrationLost, OverRun */
6516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   CurrentError = hi2c->ErrorCode;
6517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 133


6519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       ((CurrentError & HAL_I2C_ERROR_ARLO) == HAL_I2C_ERROR_ARLO) || \
6520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       ((CurrentError & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF)     || \
6521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       ((CurrentError & HAL_I2C_ERROR_OVR) == HAL_I2C_ERROR_OVR))
6522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT, BUF and ERR interrupt */
6524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
6525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* So may inform upper layer that listen phase is stopped */
6528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* during NACK error treatment */
6529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   CurrentState = hi2c->State;
6530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_
6531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
6533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
6534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
6535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode          = HAL_I2C_MODE_NONE;
6536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
6538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
6540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
6542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
6550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
6551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
6554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint3
6556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
6558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions = hi2c->XferOptions;
6559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start condition if first transfer */
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) |
6562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
6564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
6567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate ReStart */
6569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
6574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 134


6576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until SB flag is set */
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_WRONG_START;
6582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_TIMEOUT;
6584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
6587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send slave address */
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
6590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send header of slave address */
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
6595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until ADD10 flag is set */
6597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK
6598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
6600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send slave address */
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
6604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until ADDR flag is set */
6607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
6613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Master sends target device address for read request.
6617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
6620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
6621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
6624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32
6626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
6628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions = hi2c->XferOptions;
6629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Enable Acknowledge */
6631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 135


6633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start condition if first transfer */
6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  
6635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Start */
6637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
6640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate ReStart */
6642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
6647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until SB flag is set */
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_WRONG_START;
6655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_TIMEOUT;
6657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
6660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send slave address */
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
6663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send header of slave address */
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
6668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until ADD10 flag is set */
6670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK
6671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
6673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send slave address */
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
6677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
6679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
6682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear ADDR flag */
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
6686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Generate Restart */
6688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 136


6690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until SB flag is set */
6691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_WRONG_START;
6696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_TIMEOUT;
6698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send header of slave address */
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
6702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until ADDR flag is set */
6705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
6711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
6715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
6718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
6719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
6720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
6721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
6724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
6726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start */
6728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until SB flag is set */
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_WRONG_START;
6736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_TIMEOUT;
6738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Send slave address */
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
6742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until ADDR flag is set */
6744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 137


6747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear ADDR flag */
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
6751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until TXE flag is set */
6753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
6754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
6756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
6758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
6764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
6765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Memory Address */
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
6768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
6770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send MSB of Memory Address */
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
6774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until TXE flag is set */
6776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
6777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
6779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
6781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
6784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send LSB of Memory Address */
6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
6788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
6791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
6795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
6797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
6798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
6799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
6800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
6801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 138


6804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
6806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Enable Acknowledge */
6808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start */
6811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until SB flag is set */
6814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_WRONG_START;
6819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_TIMEOUT;
6821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Send slave address */
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
6825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until ADDR flag is set */
6827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear ADDR flag */
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
6834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until TXE flag is set */
6836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
6837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
6839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
6841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
6847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
6848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send Memory Address */
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
6851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
6853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
6854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send MSB of Memory Address */
6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
6857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Wait until TXE flag is set */
6859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
6860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 139


6861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
6862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
6863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Generate Stop */
6864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
6866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
6867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Send LSB of Memory Address */
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
6871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until TXE flag is set */
6874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
6875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
6877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
6879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Restart */
6885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
6886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until SB flag is set */
6888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
6889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
6891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_WRONG_START;
6893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_TIMEOUT;
6895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Send slave address */
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
6899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until ADDR flag is set */
6901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
6902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
6904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
6907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
6908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
6910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  DMA I2C process complete callback.
6911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hdma DMA handle
6912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
6913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
6914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAXferCplt(DMA_HandleTypeDef *hdma)
6915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
6916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation
6917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 140


6918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
6919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
6920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
6921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   uint32_t CurrentXferOptions       = hi2c->XferOptions;
6922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable EVT and ERR interrupt */
6924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
6925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear Complete callback */
6927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = NULL;
6930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = NULL;
6934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if ((((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_BUSY_TX) == (uint32_t)HAL_I2C_STATE_BUSY_T
6937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable DMA Request */
6939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
6940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount = 0U;
6942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN)
6944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set state at HAL_I2C_STATE_LISTEN */
6946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
6947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
6948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->SlaveTxCpltCallback(hi2c);
6952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_SlaveTxCpltCallback(hi2c);
6954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
6957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Set state at HAL_I2C_STATE_LISTEN */
6959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
6960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
6961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
6964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->SlaveRxCpltCallback(hi2c);
6965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
6966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_SlaveRxCpltCallback(hi2c);
6967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
6968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
6970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Do nothing */
6972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Enable EVT and ERR interrupt to treat end of transfer in IRQ handler */
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 141


6975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_ENABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
6976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
6977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check current Mode, in case of treatment DMA handler have been preempted by a prior interrupt 
6978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->Mode != HAL_I2C_MODE_NONE)
6979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
6980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->XferCount == (uint16_t)1)
6981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Disable Acknowledge */
6983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
6984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable EVT and ERR interrupt */
6987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
6988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Prepare next transfer or stop current transfer */
6990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FR
6991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
6992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
6993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
6994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
6995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Last DMA */
6997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
6998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
6999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable DMA Request */
7000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
7001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount = 0U;
7003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if Errors has been detected during transfer */
7005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
7006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCallback(hi2c);
7009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       HAL_I2C_ErrorCallback(hi2c);
7011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
7014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
7016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (hi2c->Mode == HAL_I2C_MODE_MEM)
7018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
7020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState = I2C_STATE_NONE;
7021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MemRxCpltCallback(hi2c);
7024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_MemRxCpltCallback(hi2c);
7026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       else
7029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
7031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 142


7032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback(hi2c);
7035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         HAL_I2C_MasterRxCpltCallback(hi2c);
7037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
7042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Do nothing */
7044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
7049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hdma DMA handle
7050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
7051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
7053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation
7055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear Complete callback */
7057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
7058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = NULL;
7060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
7062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = NULL;
7064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Ignore DMA FIFO error */
7067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
7068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Disable Acknowledge */
7070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
7071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferCount = 0U;
7073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
7075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
7076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
7078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
7081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
7083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 143


7089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
7090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param hdma DMA handle.
7091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
7092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
7094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
7096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation
7097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
7099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef CurrentState = hi2c->State;
7100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* During abort treatment, check that there is no pending STOP request */
7102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until STOP flag is reset */
7103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
7104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   do
7105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (count == 0U)
7107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
7109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       break;
7110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count--;
7112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
7114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Clear Complete callback */
7116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
7117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = NULL;
7119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
7121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = NULL;
7123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable Acknowledge */
7126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
7127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   hi2c->XferCount = 0U;
7129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Reset XferAbortCallback */
7131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
7132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
7134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
7136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
7138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Disable I2C peripheral to prevent dummy data in buffer */
7141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
7142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Check if come from abort from user */
7144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
7145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 144


7146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
7147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode          = HAL_I2C_MODE_NONE;
7148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
7149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
7151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
7153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
7155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
7158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN
7160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Renable I2C peripheral */
7162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_ENABLE(hi2c);
7163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Enable Acknowledge */
7165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
7166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* keep HAL_I2C_STATE_LISTEN */
7168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_NONE;
7169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_LISTEN;
7170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     else
7172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
7174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
7175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
7178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
7179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
7180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #else
7181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
7182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
7183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
7188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
7190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Flag specifies the I2C flag to check.
7191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
7192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
7194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
7197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until flag is set */
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
7200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 145


7203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState     = I2C_STATE_NONE;
7207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State             = HAL_I2C_STATE_READY;
7208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode              = HAL_I2C_MODE_NONE;
7209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
7210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
7212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
7213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
7215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for Master addressing phase.
7223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *         the configuration information for I2C module
7225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Flag specifies the I2C flag to check.
7226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
7228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t 
7231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
7233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
7235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Generate Stop */
7237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
7238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear AF Flag */
7240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
7241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState       = I2C_STATE_NONE;
7243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
7244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
7245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
7246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
7248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
7249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
7255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
7259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 146


7260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
7261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
7262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
7264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
7265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
7267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXE flag.
7275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
7279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, u
7282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
7284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if a NACK is detected */
7286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
7287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
7293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
7297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
7298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
7299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
7300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
7302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
7303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
7305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of BTF flag.
7313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 147


7317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, u
7320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
7322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if a NACK is detected */
7324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
7325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
7331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
7334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->PreviousState       = I2C_STATE_NONE;
7335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
7336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
7337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
7338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         /* Process Unlocked */
7340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
7341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         return HAL_ERROR;
7343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
7344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
7351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
7355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
7358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
7360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if a NACK is detected */
7362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
7363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState       = I2C_STATE_NONE;
7371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
7372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
7373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 148


7374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
7376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
7377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP request thro
7386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPRequestThroughIT(I2C_HandleTypeDef *hi2c)
7391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 832              		.loc 1 7391 1 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837              		.loc 1 7391 1 is_stmt 0 view .LVU271
 838 0000 82B0     		sub	sp, sp, #8
 839              		.cfi_def_cfa_offset 8
7392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   __IO uint32_t count = 0U;
 840              		.loc 1 7392 3 is_stmt 1 view .LVU272
 841              		.loc 1 7392 17 is_stmt 0 view .LVU273
 842 0002 0023     		movs	r3, #0
 843 0004 0193     		str	r3, [sp, #4]
7393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until STOP flag is reset */
7395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 844              		.loc 1 7395 3 is_stmt 1 view .LVU274
 845              		.loc 1 7395 58 is_stmt 0 view .LVU275
 846 0006 0E4B     		ldr	r3, .L58
 847 0008 1B68     		ldr	r3, [r3]
 848 000a DB08     		lsrs	r3, r3, #3
 849 000c 0D4A     		ldr	r2, .L58+4
 850 000e A2FB0323 		umull	r2, r3, r2, r3
 851 0012 1B0A     		lsrs	r3, r3, #8
 852              		.loc 1 7395 33 view .LVU276
 853 0014 03EB8303 		add	r3, r3, r3, lsl #2
 854              		.loc 1 7395 9 view .LVU277
 855 0018 0193     		str	r3, [sp, #4]
 856              	.L55:
7396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   do
 857              		.loc 1 7396 3 is_stmt 1 view .LVU278
7397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     count--;
 858              		.loc 1 7398 5 view .LVU279
 859              		.loc 1 7398 10 is_stmt 0 view .LVU280
 860 001a 019B     		ldr	r3, [sp, #4]
 861 001c 013B     		subs	r3, r3, #1
 862 001e 0193     		str	r3, [sp, #4]
7399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (count == 0U)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 149


 863              		.loc 1 7399 5 is_stmt 1 view .LVU281
 864              		.loc 1 7399 15 is_stmt 0 view .LVU282
 865 0020 019B     		ldr	r3, [sp, #4]
 866              		.loc 1 7399 8 view .LVU283
 867 0022 33B1     		cbz	r3, .L57
7400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
7402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 868              		.loc 1 7406 9 is_stmt 1 view .LVU284
 869              		.loc 1 7406 10 is_stmt 0 view .LVU285
 870 0024 0368     		ldr	r3, [r0]
 871 0026 1B68     		ldr	r3, [r3]
 872              		.loc 1 7406 3 view .LVU286
 873 0028 13F4007F 		tst	r3, #512
 874 002c F5D1     		bne	.L55
7407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
 875              		.loc 1 7408 10 view .LVU287
 876 002e 0020     		movs	r0, #0
 877              	.LVL31:
 878              		.loc 1 7408 10 view .LVU288
 879 0030 04E0     		b	.L54
 880              	.LVL32:
 881              	.L57:
7401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 882              		.loc 1 7401 7 is_stmt 1 view .LVU289
7401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 883              		.loc 1 7401 33 is_stmt 0 view .LVU290
 884 0032 036C     		ldr	r3, [r0, #64]
 885 0034 43F02003 		orr	r3, r3, #32
 886 0038 0364     		str	r3, [r0, #64]
7403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 887              		.loc 1 7403 7 is_stmt 1 view .LVU291
7403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 888              		.loc 1 7403 14 is_stmt 0 view .LVU292
 889 003a 0120     		movs	r0, #1
 890              	.LVL33:
 891              	.L54:
7409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 892              		.loc 1 7409 1 view .LVU293
 893 003c 02B0     		add	sp, sp, #8
 894              		.cfi_def_cfa_offset 0
 895              		@ sp needed
 896 003e 7047     		bx	lr
 897              	.L59:
 898              		.align	2
 899              	.L58:
 900 0040 00000000 		.word	SystemCoreClock
 901 0044 89B5F814 		.word	351843721
 902              		.cfi_endproc
 903              	.LFE207:
 905              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 906              		.align	1
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 150


 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	I2C_IsAcknowledgeFailed:
 913              	.LVL34:
 914              	.LFB209:
7410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
7413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
7416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
7417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
7420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
7421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
7423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check if a STOPF is detected */
7425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
7426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Clear STOP Flag */
7428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
7429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState       = I2C_STATE_NONE;
7431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
7432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
7433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
7434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
7436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
7437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Check for the Timeout */
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
7443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
7444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->PreviousState       = I2C_STATE_NONE;
7445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
7446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
7447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
7448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       /* Process Unlocked */
7450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
7451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       return HAL_ERROR;
7453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
7454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
7456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
7457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 151


7460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
7461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
7462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval HAL status
7463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
7465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 915              		.loc 1 7465 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
7466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 920              		.loc 1 7466 3 view .LVU295
 921              		.loc 1 7466 7 is_stmt 0 view .LVU296
 922 0000 0368     		ldr	r3, [r0]
 923 0002 5A69     		ldr	r2, [r3, #20]
 924              		.loc 1 7466 6 view .LVU297
 925 0004 12F4806F 		tst	r2, #1024
 926 0008 01D1     		bne	.L63
7467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Clear NACKF Flag */
7469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
7470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->PreviousState       = I2C_STATE_NONE;
7472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State               = HAL_I2C_STATE_READY;
7473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode                = HAL_I2C_MODE_NONE;
7474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
7475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Process Unlocked */
7477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
7478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     return HAL_ERROR;
7480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   return HAL_OK;
 927              		.loc 1 7481 10 view .LVU298
 928 000a 0020     		movs	r0, #0
 929              	.LVL35:
7482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 930              		.loc 1 7482 1 view .LVU299
 931 000c 7047     		bx	lr
 932              	.LVL36:
 933              	.L63:
7469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 934              		.loc 1 7469 5 is_stmt 1 view .LVU300
 935 000e 6FF48062 		mvn	r2, #1024
 936 0012 5A61     		str	r2, [r3, #20]
7471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State               = HAL_I2C_STATE_READY;
 937              		.loc 1 7471 5 view .LVU301
7471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->State               = HAL_I2C_STATE_READY;
 938              		.loc 1 7471 31 is_stmt 0 view .LVU302
 939 0014 0023     		movs	r3, #0
 940 0016 0363     		str	r3, [r0, #48]
7472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode                = HAL_I2C_MODE_NONE;
 941              		.loc 1 7472 5 is_stmt 1 view .LVU303
7472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->Mode                = HAL_I2C_MODE_NONE;
 942              		.loc 1 7472 31 is_stmt 0 view .LVU304
 943 0018 2022     		movs	r2, #32
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 152


 944 001a 80F83D20 		strb	r2, [r0, #61]
7473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 945              		.loc 1 7473 5 is_stmt 1 view .LVU305
7473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 946              		.loc 1 7473 31 is_stmt 0 view .LVU306
 947 001e 80F83E30 		strb	r3, [r0, #62]
7474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 948              		.loc 1 7474 5 is_stmt 1 view .LVU307
7474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 949              		.loc 1 7474 31 is_stmt 0 view .LVU308
 950 0022 026C     		ldr	r2, [r0, #64]
 951 0024 42F00402 		orr	r2, r2, #4
 952 0028 0264     		str	r2, [r0, #64]
7477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 953              		.loc 1 7477 5 is_stmt 1 view .LVU309
7477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 954              		.loc 1 7477 5 view .LVU310
 955 002a 80F83C30 		strb	r3, [r0, #60]
7477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 956              		.loc 1 7477 5 view .LVU311
7479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 957              		.loc 1 7479 5 view .LVU312
7479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 958              		.loc 1 7479 12 is_stmt 0 view .LVU313
 959 002e 0120     		movs	r0, #1
 960              	.LVL37:
7479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 961              		.loc 1 7479 12 view .LVU314
 962 0030 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE209:
 966              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 967              		.align	1
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	I2C_ConvertOtherXferOptions:
 974              	.LVL38:
 975              	.LFB210:
7483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
7484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** /**
7485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functional XferOptions.
7486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
7487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   * @retval None
7488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   */
7489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
7490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** {
 976              		.loc 1 7490 1 is_stmt 1 view -0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
7491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
7492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
7493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
7494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 153


 981              		.loc 1 7494 3 view .LVU316
 982              		.loc 1 7494 11 is_stmt 0 view .LVU317
 983 0000 C36A     		ldr	r3, [r0, #44]
 984              		.loc 1 7494 6 view .LVU318
 985 0002 B3F52A0F 		cmp	r3, #11141120
 986 0006 04D0     		beq	.L67
7495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
7497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
7499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
7500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
7501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
7502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 987              		.loc 1 7502 8 is_stmt 1 view .LVU319
 988              		.loc 1 7502 16 is_stmt 0 view .LVU320
 989 0008 C36A     		ldr	r3, [r0, #44]
 990              		.loc 1 7502 11 view .LVU321
 991 000a B3F12A4F 		cmp	r3, #-1442840576
 992 000e 03D0     		beq	.L68
 993              	.L64:
7503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
7505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   else
7507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
7508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     /* Nothing to do */
7509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
7510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 994              		.loc 1 7510 1 view .LVU322
 995 0010 7047     		bx	lr
 996              	.L67:
7496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 997              		.loc 1 7496 5 is_stmt 1 view .LVU323
7496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 998              		.loc 1 7496 23 is_stmt 0 view .LVU324
 999 0012 0123     		movs	r3, #1
 1000 0014 C362     		str	r3, [r0, #44]
 1001 0016 7047     		bx	lr
 1002              	.L68:
7504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1003              		.loc 1 7504 5 is_stmt 1 view .LVU325
7504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1004              		.loc 1 7504 23 is_stmt 0 view .LVU326
 1005 0018 0823     		movs	r3, #8
 1006 001a C362     		str	r3, [r0, #44]
7509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 1007              		.loc 1 7509 3 is_stmt 1 view .LVU327
 1008              		.loc 1 7510 1 is_stmt 0 view .LVU328
 1009 001c F8E7     		b	.L64
 1010              		.cfi_endproc
 1011              	.LFE210:
 1013              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 1014              		.align	1
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 154


 1018              		.fpu fpv4-sp-d16
 1020              	I2C_WaitOnFlagUntilTimeout:
 1021              	.LVL39:
 1022              	.LFB202:
7197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until flag is set */
 1023              		.loc 1 7197 1 is_stmt 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 4, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
7197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Wait until flag is set */
 1027              		.loc 1 7197 1 is_stmt 0 view .LVU330
 1028 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1029              		.cfi_def_cfa_offset 24
 1030              		.cfi_offset 4, -24
 1031              		.cfi_offset 5, -20
 1032              		.cfi_offset 6, -16
 1033              		.cfi_offset 7, -12
 1034              		.cfi_offset 8, -8
 1035              		.cfi_offset 14, -4
 1036 0004 0746     		mov	r7, r0
 1037 0006 0D46     		mov	r5, r1
 1038 0008 9046     		mov	r8, r2
 1039 000a 1E46     		mov	r6, r3
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1040              		.loc 1 7199 3 is_stmt 1 view .LVU331
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1041              		.loc 1 7199 9 is_stmt 0 view .LVU332
 1042 000c 22E0     		b	.L71
 1043              	.LVL40:
 1044              	.L79:
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1045              		.loc 1 7204 7 is_stmt 1 view .LVU333
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1046              		.loc 1 7204 13 is_stmt 0 view .LVU334
 1047 000e FFF7FEFF 		bl	HAL_GetTick
 1048              	.LVL41:
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1049              		.loc 1 7204 27 view .LVU335
 1050 0012 069B     		ldr	r3, [sp, #24]
 1051 0014 C01A     		subs	r0, r0, r3
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1052              		.loc 1 7204 10 view .LVU336
 1053 0016 B042     		cmp	r0, r6
 1054 0018 00D8     		bhi	.L72
7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1055              		.loc 1 7204 51 discriminator 1 view .LVU337
 1056 001a DEB9     		cbnz	r6, .L71
 1057              	.L72:
7206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State             = HAL_I2C_STATE_READY;
 1058              		.loc 1 7206 9 is_stmt 1 view .LVU338
7206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State             = HAL_I2C_STATE_READY;
 1059              		.loc 1 7206 33 is_stmt 0 view .LVU339
 1060 001c 0023     		movs	r3, #0
 1061 001e 3B63     		str	r3, [r7, #48]
7207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode              = HAL_I2C_MODE_NONE;
 1062              		.loc 1 7207 9 is_stmt 1 view .LVU340
7207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode              = HAL_I2C_MODE_NONE;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 155


 1063              		.loc 1 7207 33 is_stmt 0 view .LVU341
 1064 0020 2022     		movs	r2, #32
 1065 0022 87F83D20 		strb	r2, [r7, #61]
7208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 1066              		.loc 1 7208 9 is_stmt 1 view .LVU342
7208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 1067              		.loc 1 7208 33 is_stmt 0 view .LVU343
 1068 0026 87F83E30 		strb	r3, [r7, #62]
7209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1069              		.loc 1 7209 9 is_stmt 1 view .LVU344
7209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1070              		.loc 1 7209 33 is_stmt 0 view .LVU345
 1071 002a 3A6C     		ldr	r2, [r7, #64]
 1072 002c 42F02002 		orr	r2, r2, #32
 1073 0030 3A64     		str	r2, [r7, #64]
7212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1074              		.loc 1 7212 9 is_stmt 1 view .LVU346
7212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1075              		.loc 1 7212 9 view .LVU347
 1076 0032 87F83C30 		strb	r3, [r7, #60]
7212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1077              		.loc 1 7212 9 view .LVU348
7214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1078              		.loc 1 7214 9 view .LVU349
7214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1079              		.loc 1 7214 16 is_stmt 0 view .LVU350
 1080 0036 0120     		movs	r0, #1
 1081 0038 1AE0     		b	.L73
 1082              	.L74:
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1083              		.loc 1 7199 10 discriminator 2 view .LVU351
 1084 003a 3B68     		ldr	r3, [r7]
 1085 003c 9C69     		ldr	r4, [r3, #24]
 1086 003e 25EA0404 		bic	r4, r5, r4
 1087 0042 A4B2     		uxth	r4, r4
 1088 0044 B4FA84F4 		clz	r4, r4
 1089 0048 6409     		lsrs	r4, r4, #5
 1090              	.L75:
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1091              		.loc 1 7199 9 discriminator 4 view .LVU352
 1092 004a A045     		cmp	r8, r4
 1093 004c 0FD1     		bne	.L78
7202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1094              		.loc 1 7202 5 is_stmt 1 view .LVU353
7202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1095              		.loc 1 7202 8 is_stmt 0 view .LVU354
 1096 004e B6F1FF3F 		cmp	r6, #-1
 1097 0052 DCD1     		bne	.L79
 1098              	.L71:
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1099              		.loc 1 7199 9 is_stmt 1 view .LVU355
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1100              		.loc 1 7199 10 is_stmt 0 view .LVU356
 1101 0054 C5F30743 		ubfx	r3, r5, #16, #8
 1102 0058 012B     		cmp	r3, #1
 1103 005a EED1     		bne	.L74
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 156


 1104              		.loc 1 7199 10 discriminator 1 view .LVU357
 1105 005c 3B68     		ldr	r3, [r7]
 1106 005e 5C69     		ldr	r4, [r3, #20]
 1107 0060 25EA0404 		bic	r4, r5, r4
 1108 0064 A4B2     		uxth	r4, r4
 1109 0066 B4FA84F4 		clz	r4, r4
 1110 006a 6409     		lsrs	r4, r4, #5
 1111 006c EDE7     		b	.L75
 1112              	.L78:
7218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 1113              		.loc 1 7218 10 view .LVU358
 1114 006e 0020     		movs	r0, #0
 1115              	.L73:
7219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1116              		.loc 1 7219 1 view .LVU359
 1117 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
7219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1118              		.loc 1 7219 1 view .LVU360
 1119              		.cfi_endproc
 1120              	.LFE202:
 1122              		.section	.text.I2C_WaitOnMasterAddressFlagUntilTimeout,"ax",%progbits
 1123              		.align	1
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1127              		.fpu fpv4-sp-d16
 1129              	I2C_WaitOnMasterAddressFlagUntilTimeout:
 1130              	.LVL42:
 1131              	.LFB203:
7231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 1132              		.loc 1 7231 1 is_stmt 1 view -0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
7231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 1136              		.loc 1 7231 1 is_stmt 0 view .LVU362
 1137 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1138              		.cfi_def_cfa_offset 24
 1139              		.cfi_offset 4, -24
 1140              		.cfi_offset 5, -20
 1141              		.cfi_offset 6, -16
 1142              		.cfi_offset 7, -12
 1143              		.cfi_offset 8, -8
 1144              		.cfi_offset 14, -4
 1145 0004 0546     		mov	r5, r0
 1146 0006 0E46     		mov	r6, r1
 1147 0008 1746     		mov	r7, r2
 1148 000a 9846     		mov	r8, r3
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1149              		.loc 1 7232 3 is_stmt 1 view .LVU363
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1150              		.loc 1 7232 9 is_stmt 0 view .LVU364
 1151 000c 3DE0     		b	.L84
 1152              	.LVL43:
 1153              	.L91:
7237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1154              		.loc 1 7237 7 is_stmt 1 view .LVU365
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 157


 1155 000e 1A68     		ldr	r2, [r3]
 1156 0010 42F40072 		orr	r2, r2, #512
 1157 0014 1A60     		str	r2, [r3]
7240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1158              		.loc 1 7240 7 view .LVU366
 1159 0016 2B68     		ldr	r3, [r5]
 1160 0018 6FF48062 		mvn	r2, #1024
 1161 001c 5A61     		str	r2, [r3, #20]
7242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 1162              		.loc 1 7242 7 view .LVU367
7242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 1163              		.loc 1 7242 33 is_stmt 0 view .LVU368
 1164 001e 0023     		movs	r3, #0
 1165 0020 2B63     		str	r3, [r5, #48]
7243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 1166              		.loc 1 7243 7 is_stmt 1 view .LVU369
7243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 1167              		.loc 1 7243 33 is_stmt 0 view .LVU370
 1168 0022 2022     		movs	r2, #32
 1169 0024 85F83D20 		strb	r2, [r5, #61]
7244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 1170              		.loc 1 7244 7 is_stmt 1 view .LVU371
7244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 1171              		.loc 1 7244 33 is_stmt 0 view .LVU372
 1172 0028 85F83E30 		strb	r3, [r5, #62]
7245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1173              		.loc 1 7245 7 is_stmt 1 view .LVU373
7245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1174              		.loc 1 7245 33 is_stmt 0 view .LVU374
 1175 002c 2A6C     		ldr	r2, [r5, #64]
 1176 002e 42F00402 		orr	r2, r2, #4
 1177 0032 2A64     		str	r2, [r5, #64]
7248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1178              		.loc 1 7248 7 is_stmt 1 view .LVU375
7248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1179              		.loc 1 7248 7 view .LVU376
 1180 0034 85F83C30 		strb	r3, [r5, #60]
7248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1181              		.loc 1 7248 7 view .LVU377
7250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1182              		.loc 1 7250 7 view .LVU378
7250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1183              		.loc 1 7250 14 is_stmt 0 view .LVU379
 1184 0038 0120     		movs	r0, #1
 1185 003a 34E0     		b	.L83
 1186              	.L92:
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1187              		.loc 1 7256 7 is_stmt 1 view .LVU380
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1188              		.loc 1 7256 13 is_stmt 0 view .LVU381
 1189 003c FFF7FEFF 		bl	HAL_GetTick
 1190              	.LVL44:
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1191              		.loc 1 7256 27 view .LVU382
 1192 0040 A0EB0800 		sub	r0, r0, r8
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1193              		.loc 1 7256 10 view .LVU383
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 158


 1194 0044 B842     		cmp	r0, r7
 1195 0046 00D8     		bhi	.L85
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1196              		.loc 1 7256 51 discriminator 1 view .LVU384
 1197 0048 FFB9     		cbnz	r7, .L84
 1198              	.L85:
7258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 1199              		.loc 1 7258 9 is_stmt 1 view .LVU385
7258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 1200              		.loc 1 7258 35 is_stmt 0 view .LVU386
 1201 004a 0023     		movs	r3, #0
 1202 004c 2B63     		str	r3, [r5, #48]
7259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 1203              		.loc 1 7259 9 is_stmt 1 view .LVU387
7259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 1204              		.loc 1 7259 35 is_stmt 0 view .LVU388
 1205 004e 2022     		movs	r2, #32
 1206 0050 85F83D20 		strb	r2, [r5, #61]
7260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 1207              		.loc 1 7260 9 is_stmt 1 view .LVU389
7260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 1208              		.loc 1 7260 35 is_stmt 0 view .LVU390
 1209 0054 85F83E30 		strb	r3, [r5, #62]
7261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1210              		.loc 1 7261 9 is_stmt 1 view .LVU391
7261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1211              		.loc 1 7261 35 is_stmt 0 view .LVU392
 1212 0058 2A6C     		ldr	r2, [r5, #64]
 1213 005a 42F02002 		orr	r2, r2, #32
 1214 005e 2A64     		str	r2, [r5, #64]
7264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1215              		.loc 1 7264 9 is_stmt 1 view .LVU393
7264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1216              		.loc 1 7264 9 view .LVU394
 1217 0060 85F83C30 		strb	r3, [r5, #60]
7264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1218              		.loc 1 7264 9 view .LVU395
7266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1219              		.loc 1 7266 9 view .LVU396
7266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1220              		.loc 1 7266 16 is_stmt 0 view .LVU397
 1221 0064 0120     		movs	r0, #1
 1222 0066 1EE0     		b	.L83
 1223              	.L86:
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1224              		.loc 1 7232 10 discriminator 2 view .LVU398
 1225 0068 2B68     		ldr	r3, [r5]
 1226 006a 9C69     		ldr	r4, [r3, #24]
 1227 006c 26EA0404 		bic	r4, r6, r4
 1228 0070 A4B2     		uxth	r4, r4
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1229              		.loc 1 7232 41 discriminator 2 view .LVU399
 1230 0072 003C     		subs	r4, r4, #0
 1231 0074 18BF     		it	ne
 1232 0076 0124     		movne	r4, #1
 1233              	.L87:
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 159


 1234              		.loc 1 7232 9 discriminator 4 view .LVU400
 1235 0078 A4B1     		cbz	r4, .L90
7234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1236              		.loc 1 7234 5 is_stmt 1 view .LVU401
7234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1237              		.loc 1 7234 9 is_stmt 0 view .LVU402
 1238 007a 2B68     		ldr	r3, [r5]
 1239 007c 5A69     		ldr	r2, [r3, #20]
7234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1240              		.loc 1 7234 8 view .LVU403
 1241 007e 12F4806F 		tst	r2, #1024
 1242 0082 C4D1     		bne	.L91
7254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1243              		.loc 1 7254 5 is_stmt 1 view .LVU404
7254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1244              		.loc 1 7254 8 is_stmt 0 view .LVU405
 1245 0084 B7F1FF3F 		cmp	r7, #-1
 1246 0088 D8D1     		bne	.L92
 1247              	.L84:
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1248              		.loc 1 7232 9 is_stmt 1 view .LVU406
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1249              		.loc 1 7232 10 is_stmt 0 view .LVU407
 1250 008a C6F30743 		ubfx	r3, r6, #16, #8
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1251              		.loc 1 7232 41 view .LVU408
 1252 008e 012B     		cmp	r3, #1
 1253 0090 EAD1     		bne	.L86
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1254              		.loc 1 7232 10 discriminator 1 view .LVU409
 1255 0092 2B68     		ldr	r3, [r5]
 1256 0094 5C69     		ldr	r4, [r3, #20]
 1257 0096 26EA0404 		bic	r4, r6, r4
 1258 009a A4B2     		uxth	r4, r4
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1259              		.loc 1 7232 41 discriminator 1 view .LVU410
 1260 009c 003C     		subs	r4, r4, #0
 1261 009e 18BF     		it	ne
 1262 00a0 0124     		movne	r4, #1
 1263 00a2 E9E7     		b	.L87
 1264              	.L90:
7270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 1265              		.loc 1 7270 10 view .LVU411
 1266 00a4 0020     		movs	r0, #0
 1267              	.L83:
7271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1268              		.loc 1 7271 1 view .LVU412
 1269 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
7271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1270              		.loc 1 7271 1 view .LVU413
 1271              		.cfi_endproc
 1272              	.LFE203:
 1274              		.section	.text.I2C_MasterRequestWrite,"ax",%progbits
 1275              		.align	1
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 160


 1279              		.fpu fpv4-sp-d16
 1281              	I2C_MasterRequestWrite:
 1282              	.LVL45:
 1283              	.LFB195:
6556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
 1284              		.loc 1 6556 1 is_stmt 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
6556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
 1288              		.loc 1 6556 1 is_stmt 0 view .LVU415
 1289 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1290              		.cfi_def_cfa_offset 20
 1291              		.cfi_offset 4, -20
 1292              		.cfi_offset 5, -16
 1293              		.cfi_offset 6, -12
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 83B0     		sub	sp, sp, #12
 1297              		.cfi_def_cfa_offset 32
 1298 0004 0446     		mov	r4, r0
 1299 0006 0D46     		mov	r5, r1
 1300 0008 1646     		mov	r6, r2
 1301 000a 1F46     		mov	r7, r3
6558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1302              		.loc 1 6558 3 is_stmt 1 view .LVU416
6558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1303              		.loc 1 6558 12 is_stmt 0 view .LVU417
 1304 000c C36A     		ldr	r3, [r0, #44]
 1305              	.LVL46:
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1306              		.loc 1 6561 3 is_stmt 1 view .LVU418
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1307              		.loc 1 6561 6 is_stmt 0 view .LVU419
 1308 000e 082B     		cmp	r3, #8
 1309 0010 0DD0     		beq	.L94
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1310              		.loc 1 6561 56 discriminator 1 view .LVU420
 1311 0012 012B     		cmp	r3, #1
 1312 0014 0BD0     		beq	.L94
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1313              		.loc 1 6561 99 discriminator 2 view .LVU421
 1314 0016 13F5803F 		cmn	r3, #65536
 1315 001a 08D0     		beq	.L94
6566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1316              		.loc 1 6566 8 is_stmt 1 view .LVU422
6566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1317              		.loc 1 6566 16 is_stmt 0 view .LVU423
 1318 001c 036B     		ldr	r3, [r0, #48]
 1319              	.LVL47:
6566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1320              		.loc 1 6566 11 view .LVU424
 1321 001e 122B     		cmp	r3, #18
 1322 0020 0AD1     		bne	.L96
6569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1323              		.loc 1 6569 5 is_stmt 1 view .LVU425
 1324 0022 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 161


 1325              	.LVL48:
6569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1326              		.loc 1 6569 5 is_stmt 0 view .LVU426
 1327 0024 1368     		ldr	r3, [r2]
 1328 0026 43F48073 		orr	r3, r3, #256
 1329 002a 1360     		str	r3, [r2]
 1330 002c 04E0     		b	.L96
 1331              	.LVL49:
 1332              	.L94:
6564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1333              		.loc 1 6564 5 is_stmt 1 view .LVU427
 1334 002e 2268     		ldr	r2, [r4]
 1335              	.LVL50:
6564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1336              		.loc 1 6564 5 is_stmt 0 view .LVU428
 1337 0030 1368     		ldr	r3, [r2]
 1338              	.LVL51:
6564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1339              		.loc 1 6564 5 view .LVU429
 1340 0032 43F48073 		orr	r3, r3, #256
 1341 0036 1360     		str	r3, [r2]
 1342              	.L96:
6574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1343              		.loc 1 6574 3 is_stmt 1 view .LVU430
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1344              		.loc 1 6577 3 view .LVU431
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1345              		.loc 1 6577 7 is_stmt 0 view .LVU432
 1346 0038 0097     		str	r7, [sp]
 1347 003a 3346     		mov	r3, r6
 1348 003c 0022     		movs	r2, #0
 1349 003e 4FF00111 		mov	r1, #65537
 1350              	.LVL52:
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1351              		.loc 1 6577 7 view .LVU433
 1352 0042 2046     		mov	r0, r4
 1353              	.LVL53:
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1354              		.loc 1 6577 7 view .LVU434
 1355 0044 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1356              	.LVL54:
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1357              		.loc 1 6577 6 view .LVU435
 1358 0048 80B9     		cbnz	r0, .L105
6586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1359              		.loc 1 6586 3 is_stmt 1 view .LVU436
6586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1360              		.loc 1 6586 17 is_stmt 0 view .LVU437
 1361 004a 2369     		ldr	r3, [r4, #16]
6586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1362              		.loc 1 6586 6 view .LVU438
 1363 004c B3F5804F 		cmp	r3, #16384
 1364 0050 16D1     		bne	.L100
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1365              		.loc 1 6589 5 is_stmt 1 view .LVU439
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1366              		.loc 1 6589 9 is_stmt 0 view .LVU440
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 162


 1367 0052 2368     		ldr	r3, [r4]
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1368              		.loc 1 6589 26 view .LVU441
 1369 0054 05F0FE05 		and	r5, r5, #254
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1370              		.loc 1 6589 24 view .LVU442
 1371 0058 1D61     		str	r5, [r3, #16]
 1372              	.L101:
6607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1373              		.loc 1 6607 3 is_stmt 1 view .LVU443
6607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1374              		.loc 1 6607 7 is_stmt 0 view .LVU444
 1375 005a 3B46     		mov	r3, r7
 1376 005c 3246     		mov	r2, r6
 1377 005e 1349     		ldr	r1, .L107
 1378 0060 2046     		mov	r0, r4
 1379 0062 FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1380              	.LVL55:
6607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1381              		.loc 1 6607 6 view .LVU445
 1382 0066 F8B9     		cbnz	r0, .L106
 1383              	.L99:
6613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1384              		.loc 1 6613 1 view .LVU446
 1385 0068 03B0     		add	sp, sp, #12
 1386              		.cfi_remember_state
 1387              		.cfi_def_cfa_offset 20
 1388              		@ sp needed
 1389 006a F0BD     		pop	{r4, r5, r6, r7, pc}
 1390              	.LVL56:
 1391              	.L105:
 1392              		.cfi_restore_state
6579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1393              		.loc 1 6579 5 is_stmt 1 view .LVU447
6579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1394              		.loc 1 6579 9 is_stmt 0 view .LVU448
 1395 006c 2368     		ldr	r3, [r4]
 1396 006e 1B68     		ldr	r3, [r3]
6579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1397              		.loc 1 6579 8 view .LVU449
 1398 0070 13F4807F 		tst	r3, #256
 1399 0074 02D0     		beq	.L98
6581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1400              		.loc 1 6581 7 is_stmt 1 view .LVU450
6581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1401              		.loc 1 6581 23 is_stmt 0 view .LVU451
 1402 0076 4FF40073 		mov	r3, #512
 1403 007a 2364     		str	r3, [r4, #64]
 1404              	.L98:
6583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1405              		.loc 1 6583 5 is_stmt 1 view .LVU452
6583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1406              		.loc 1 6583 12 is_stmt 0 view .LVU453
 1407 007c 0320     		movs	r0, #3
 1408 007e F3E7     		b	.L99
 1409              	.L100:
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 163


 1410              		.loc 1 6594 5 is_stmt 1 view .LVU454
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1411              		.loc 1 6594 26 is_stmt 0 view .LVU455
 1412 0080 EB11     		asrs	r3, r5, #7
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1413              		.loc 1 6594 9 view .LVU456
 1414 0082 2268     		ldr	r2, [r4]
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1415              		.loc 1 6594 26 view .LVU457
 1416 0084 03F00603 		and	r3, r3, #6
 1417 0088 43F0F003 		orr	r3, r3, #240
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1418              		.loc 1 6594 24 view .LVU458
 1419 008c 1361     		str	r3, [r2, #16]
6597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1420              		.loc 1 6597 5 is_stmt 1 view .LVU459
6597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1421              		.loc 1 6597 9 is_stmt 0 view .LVU460
 1422 008e 3B46     		mov	r3, r7
 1423 0090 3246     		mov	r2, r6
 1424 0092 0749     		ldr	r1, .L107+4
 1425 0094 2046     		mov	r0, r4
 1426 0096 FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1427              	.LVL57:
6597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1428              		.loc 1 6597 8 view .LVU461
 1429 009a 18B9     		cbnz	r0, .L102
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1430              		.loc 1 6603 5 is_stmt 1 view .LVU462
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1431              		.loc 1 6603 9 is_stmt 0 view .LVU463
 1432 009c 2368     		ldr	r3, [r4]
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1433              		.loc 1 6603 26 view .LVU464
 1434 009e EDB2     		uxtb	r5, r5
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1435              		.loc 1 6603 24 view .LVU465
 1436 00a0 1D61     		str	r5, [r3, #16]
 1437 00a2 DAE7     		b	.L101
 1438              	.L102:
6599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1439              		.loc 1 6599 14 view .LVU466
 1440 00a4 0120     		movs	r0, #1
 1441 00a6 DFE7     		b	.L99
 1442              	.L106:
6609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1443              		.loc 1 6609 12 view .LVU467
 1444 00a8 0120     		movs	r0, #1
 1445 00aa DDE7     		b	.L99
 1446              	.L108:
 1447              		.align	2
 1448              	.L107:
 1449 00ac 02000100 		.word	65538
 1450 00b0 08000100 		.word	65544
 1451              		.cfi_endproc
 1452              	.LFE195:
 1454              		.section	.text.I2C_MasterRequestRead,"ax",%progbits
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 164


 1455              		.align	1
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1459              		.fpu fpv4-sp-d16
 1461              	I2C_MasterRequestRead:
 1462              	.LVL58:
 1463              	.LFB196:
6626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
 1464              		.loc 1 6626 1 is_stmt 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 8
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
6626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
 1468              		.loc 1 6626 1 is_stmt 0 view .LVU469
 1469 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1470              		.cfi_def_cfa_offset 24
 1471              		.cfi_offset 4, -24
 1472              		.cfi_offset 5, -20
 1473              		.cfi_offset 6, -16
 1474              		.cfi_offset 7, -12
 1475              		.cfi_offset 8, -8
 1476              		.cfi_offset 14, -4
 1477 0004 84B0     		sub	sp, sp, #16
 1478              		.cfi_def_cfa_offset 40
 1479 0006 0446     		mov	r4, r0
 1480 0008 0D46     		mov	r5, r1
 1481 000a 1646     		mov	r6, r2
 1482 000c 1F46     		mov	r7, r3
6628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1483              		.loc 1 6628 3 is_stmt 1 view .LVU470
6628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1484              		.loc 1 6628 12 is_stmt 0 view .LVU471
 1485 000e C26A     		ldr	r2, [r0, #44]
 1486              	.LVL59:
6631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1487              		.loc 1 6631 3 is_stmt 1 view .LVU472
 1488 0010 0168     		ldr	r1, [r0]
 1489              	.LVL60:
6631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1490              		.loc 1 6631 3 is_stmt 0 view .LVU473
 1491 0012 0B68     		ldr	r3, [r1]
 1492              	.LVL61:
6631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1493              		.loc 1 6631 3 view .LVU474
 1494 0014 43F48063 		orr	r3, r3, #1024
 1495 0018 0B60     		str	r3, [r1]
6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1496              		.loc 1 6634 3 is_stmt 1 view .LVU475
6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1497              		.loc 1 6634 6 is_stmt 0 view .LVU476
 1498 001a 082A     		cmp	r2, #8
 1499 001c 0DD0     		beq	.L110
6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1500              		.loc 1 6634 56 discriminator 1 view .LVU477
 1501 001e 012A     		cmp	r2, #1
 1502 0020 0BD0     		beq	.L110
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 165


6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1503              		.loc 1 6634 100 discriminator 2 view .LVU478
 1504 0022 12F5803F 		cmn	r2, #65536
 1505 0026 08D0     		beq	.L110
6639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1506              		.loc 1 6639 8 is_stmt 1 view .LVU479
6639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1507              		.loc 1 6639 16 is_stmt 0 view .LVU480
 1508 0028 036B     		ldr	r3, [r0, #48]
6639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1509              		.loc 1 6639 11 view .LVU481
 1510 002a 112B     		cmp	r3, #17
 1511 002c 0AD1     		bne	.L112
6642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1512              		.loc 1 6642 5 is_stmt 1 view .LVU482
 1513 002e 0268     		ldr	r2, [r0]
 1514              	.LVL62:
6642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1515              		.loc 1 6642 5 is_stmt 0 view .LVU483
 1516 0030 1368     		ldr	r3, [r2]
 1517 0032 43F48073 		orr	r3, r3, #256
 1518 0036 1360     		str	r3, [r2]
 1519 0038 04E0     		b	.L112
 1520              	.LVL63:
 1521              	.L110:
6637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1522              		.loc 1 6637 5 is_stmt 1 view .LVU484
 1523 003a 2268     		ldr	r2, [r4]
 1524              	.LVL64:
6637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1525              		.loc 1 6637 5 is_stmt 0 view .LVU485
 1526 003c 1368     		ldr	r3, [r2]
 1527 003e 43F48073 		orr	r3, r3, #256
 1528 0042 1360     		str	r3, [r2]
 1529              	.L112:
6647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1530              		.loc 1 6647 3 is_stmt 1 view .LVU486
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1531              		.loc 1 6650 3 view .LVU487
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1532              		.loc 1 6650 7 is_stmt 0 view .LVU488
 1533 0044 0097     		str	r7, [sp]
 1534 0046 3346     		mov	r3, r6
 1535 0048 0022     		movs	r2, #0
 1536 004a 4FF00111 		mov	r1, #65537
 1537 004e 2046     		mov	r0, r4
 1538              	.LVL65:
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1539              		.loc 1 6650 7 view .LVU489
 1540 0050 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1541              	.LVL66:
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1542              		.loc 1 6650 6 view .LVU490
 1543 0054 98B9     		cbnz	r0, .L124
6659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1544              		.loc 1 6659 3 is_stmt 1 view .LVU491
6659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 166


 1545              		.loc 1 6659 17 is_stmt 0 view .LVU492
 1546 0056 2369     		ldr	r3, [r4, #16]
6659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1547              		.loc 1 6659 6 view .LVU493
 1548 0058 B3F5804F 		cmp	r3, #16384
 1549 005c 19D1     		bne	.L116
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1550              		.loc 1 6662 5 is_stmt 1 view .LVU494
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1551              		.loc 1 6662 9 is_stmt 0 view .LVU495
 1552 005e 2368     		ldr	r3, [r4]
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1553              		.loc 1 6662 26 view .LVU496
 1554 0060 45F00105 		orr	r5, r5, #1
 1555 0064 EDB2     		uxtb	r5, r5
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1556              		.loc 1 6662 24 view .LVU497
 1557 0066 1D61     		str	r5, [r3, #16]
 1558              	.L117:
6705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1559              		.loc 1 6705 3 is_stmt 1 view .LVU498
6705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1560              		.loc 1 6705 7 is_stmt 0 view .LVU499
 1561 0068 3B46     		mov	r3, r7
 1562 006a 3246     		mov	r2, r6
 1563 006c 2A49     		ldr	r1, .L129
 1564 006e 2046     		mov	r0, r4
 1565 0070 FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1566              	.LVL67:
6705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1567              		.loc 1 6705 6 view .LVU500
 1568 0074 0028     		cmp	r0, #0
 1569 0076 4CD1     		bne	.L125
 1570              	.L115:
6711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1571              		.loc 1 6711 1 view .LVU501
 1572 0078 04B0     		add	sp, sp, #16
 1573              		.cfi_remember_state
 1574              		.cfi_def_cfa_offset 24
 1575              		@ sp needed
 1576 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1577              	.LVL68:
 1578              	.L124:
 1579              		.cfi_restore_state
6652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1580              		.loc 1 6652 5 is_stmt 1 view .LVU502
6652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1581              		.loc 1 6652 9 is_stmt 0 view .LVU503
 1582 007e 2368     		ldr	r3, [r4]
 1583 0080 1B68     		ldr	r3, [r3]
6652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1584              		.loc 1 6652 8 view .LVU504
 1585 0082 13F4807F 		tst	r3, #256
 1586 0086 02D0     		beq	.L114
6654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1587              		.loc 1 6654 7 is_stmt 1 view .LVU505
6654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 167


 1588              		.loc 1 6654 23 is_stmt 0 view .LVU506
 1589 0088 4FF40073 		mov	r3, #512
 1590 008c 2364     		str	r3, [r4, #64]
 1591              	.L114:
6656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1592              		.loc 1 6656 5 is_stmt 1 view .LVU507
6656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1593              		.loc 1 6656 12 is_stmt 0 view .LVU508
 1594 008e 0320     		movs	r0, #3
 1595 0090 F2E7     		b	.L115
 1596              	.L116:
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1597              		.loc 1 6667 5 is_stmt 1 view .LVU509
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1598              		.loc 1 6667 26 is_stmt 0 view .LVU510
 1599 0092 4FEAE518 		asr	r8, r5, #7
 1600 0096 08F00608 		and	r8, r8, #6
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1601              		.loc 1 6667 9 view .LVU511
 1602 009a 2368     		ldr	r3, [r4]
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1603              		.loc 1 6667 26 view .LVU512
 1604 009c 48F0F002 		orr	r2, r8, #240
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1605              		.loc 1 6667 24 view .LVU513
 1606 00a0 1A61     		str	r2, [r3, #16]
6670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1607              		.loc 1 6670 5 is_stmt 1 view .LVU514
6670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1608              		.loc 1 6670 9 is_stmt 0 view .LVU515
 1609 00a2 3B46     		mov	r3, r7
 1610 00a4 3246     		mov	r2, r6
 1611 00a6 1D49     		ldr	r1, .L129+4
 1612 00a8 2046     		mov	r0, r4
 1613 00aa FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1614              	.LVL69:
6670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1615              		.loc 1 6670 8 view .LVU516
 1616 00ae 08B1     		cbz	r0, .L126
6672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1617              		.loc 1 6672 14 view .LVU517
 1618 00b0 0120     		movs	r0, #1
 1619 00b2 E1E7     		b	.L115
 1620              	.L126:
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1621              		.loc 1 6676 5 is_stmt 1 view .LVU518
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1622              		.loc 1 6676 9 is_stmt 0 view .LVU519
 1623 00b4 2368     		ldr	r3, [r4]
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1624              		.loc 1 6676 26 view .LVU520
 1625 00b6 EDB2     		uxtb	r5, r5
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1626              		.loc 1 6676 24 view .LVU521
 1627 00b8 1D61     		str	r5, [r3, #16]
6679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1628              		.loc 1 6679 5 is_stmt 1 view .LVU522
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 168


6679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1629              		.loc 1 6679 9 is_stmt 0 view .LVU523
 1630 00ba 3B46     		mov	r3, r7
 1631 00bc 3246     		mov	r2, r6
 1632 00be 1649     		ldr	r1, .L129
 1633 00c0 2046     		mov	r0, r4
 1634 00c2 FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1635              	.LVL70:
6679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1636              		.loc 1 6679 8 view .LVU524
 1637 00c6 08B1     		cbz	r0, .L127
6681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1638              		.loc 1 6681 14 view .LVU525
 1639 00c8 0120     		movs	r0, #1
 1640 00ca D5E7     		b	.L115
 1641              	.L127:
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1642              		.loc 1 6685 5 is_stmt 1 view .LVU526
 1643              	.LBB12:
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1644              		.loc 1 6685 5 view .LVU527
 1645 00cc 0022     		movs	r2, #0
 1646 00ce 0392     		str	r2, [sp, #12]
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1647              		.loc 1 6685 5 view .LVU528
 1648 00d0 2368     		ldr	r3, [r4]
 1649 00d2 5969     		ldr	r1, [r3, #20]
 1650 00d4 0391     		str	r1, [sp, #12]
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1651              		.loc 1 6685 5 view .LVU529
 1652 00d6 9969     		ldr	r1, [r3, #24]
 1653 00d8 0391     		str	r1, [sp, #12]
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1654              		.loc 1 6685 5 view .LVU530
 1655 00da 0399     		ldr	r1, [sp, #12]
 1656              	.LBE12:
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1657              		.loc 1 6685 5 view .LVU531
6688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1658              		.loc 1 6688 5 view .LVU532
 1659 00dc 1968     		ldr	r1, [r3]
 1660 00de 41F48071 		orr	r1, r1, #256
 1661 00e2 1960     		str	r1, [r3]
6691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1662              		.loc 1 6691 5 view .LVU533
6691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1663              		.loc 1 6691 9 is_stmt 0 view .LVU534
 1664 00e4 0097     		str	r7, [sp]
 1665 00e6 3346     		mov	r3, r6
 1666 00e8 4FF00111 		mov	r1, #65537
 1667 00ec 2046     		mov	r0, r4
 1668 00ee FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1669              	.LVL71:
6691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1670              		.loc 1 6691 8 view .LVU535
 1671 00f2 20B9     		cbnz	r0, .L128
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 169


 1672              		.loc 1 6701 5 is_stmt 1 view .LVU536
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1673              		.loc 1 6701 9 is_stmt 0 view .LVU537
 1674 00f4 2268     		ldr	r2, [r4]
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1675              		.loc 1 6701 26 view .LVU538
 1676 00f6 48F0F103 		orr	r3, r8, #241
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1677              		.loc 1 6701 24 view .LVU539
 1678 00fa 1361     		str	r3, [r2, #16]
 1679 00fc B4E7     		b	.L117
 1680              	.L128:
6693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1681              		.loc 1 6693 7 is_stmt 1 view .LVU540
6693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1682              		.loc 1 6693 11 is_stmt 0 view .LVU541
 1683 00fe 2368     		ldr	r3, [r4]
 1684 0100 1B68     		ldr	r3, [r3]
6693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1685              		.loc 1 6693 10 view .LVU542
 1686 0102 13F4807F 		tst	r3, #256
 1687 0106 02D0     		beq	.L119
6695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1688              		.loc 1 6695 9 is_stmt 1 view .LVU543
6695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1689              		.loc 1 6695 25 is_stmt 0 view .LVU544
 1690 0108 4FF40073 		mov	r3, #512
 1691 010c 2364     		str	r3, [r4, #64]
 1692              	.L119:
6697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1693              		.loc 1 6697 7 is_stmt 1 view .LVU545
6697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1694              		.loc 1 6697 14 is_stmt 0 view .LVU546
 1695 010e 0320     		movs	r0, #3
 1696 0110 B2E7     		b	.L115
 1697              	.L125:
6707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1698              		.loc 1 6707 12 view .LVU547
 1699 0112 0120     		movs	r0, #1
 1700 0114 B0E7     		b	.L115
 1701              	.L130:
 1702 0116 00BF     		.align	2
 1703              	.L129:
 1704 0118 02000100 		.word	65538
 1705 011c 08000100 		.word	65544
 1706              		.cfi_endproc
 1707              	.LFE196:
 1709              		.section	.text.I2C_WaitOnTXEFlagUntilTimeout,"ax",%progbits
 1710              		.align	1
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu fpv4-sp-d16
 1716              	I2C_WaitOnTXEFlagUntilTimeout:
 1717              	.LVL72:
 1718              	.LFB204:
7282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 170


 1719              		.loc 1 7282 1 is_stmt 1 view -0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
7282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 1723              		.loc 1 7282 1 is_stmt 0 view .LVU549
 1724 0000 70B5     		push	{r4, r5, r6, lr}
 1725              		.cfi_def_cfa_offset 16
 1726              		.cfi_offset 4, -16
 1727              		.cfi_offset 5, -12
 1728              		.cfi_offset 6, -8
 1729              		.cfi_offset 14, -4
 1730 0002 0446     		mov	r4, r0
 1731 0004 0D46     		mov	r5, r1
 1732 0006 1646     		mov	r6, r2
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1733              		.loc 1 7283 3 is_stmt 1 view .LVU550
 1734              	.LVL73:
 1735              	.L134:
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1736              		.loc 1 7283 9 view .LVU551
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1737              		.loc 1 7283 10 is_stmt 0 view .LVU552
 1738 0008 2368     		ldr	r3, [r4]
 1739 000a 5B69     		ldr	r3, [r3, #20]
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1740              		.loc 1 7283 9 view .LVU553
 1741 000c 13F0800F 		tst	r3, #128
 1742 0010 1CD1     		bne	.L139
7286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1743              		.loc 1 7286 5 is_stmt 1 view .LVU554
7286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1744              		.loc 1 7286 9 is_stmt 0 view .LVU555
 1745 0012 2046     		mov	r0, r4
 1746 0014 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1747              	.LVL74:
7286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1748              		.loc 1 7286 8 view .LVU556
 1749 0018 D0B9     		cbnz	r0, .L137
7292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1750              		.loc 1 7292 5 is_stmt 1 view .LVU557
7292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1751              		.loc 1 7292 8 is_stmt 0 view .LVU558
 1752 001a B5F1FF3F 		cmp	r5, #-1
 1753 001e F3D0     		beq	.L134
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1754              		.loc 1 7294 7 is_stmt 1 view .LVU559
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1755              		.loc 1 7294 13 is_stmt 0 view .LVU560
 1756 0020 FFF7FEFF 		bl	HAL_GetTick
 1757              	.LVL75:
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1758              		.loc 1 7294 27 view .LVU561
 1759 0024 801B     		subs	r0, r0, r6
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1760              		.loc 1 7294 10 view .LVU562
 1761 0026 A842     		cmp	r0, r5
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 171


 1762 0028 01D8     		bhi	.L135
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1763              		.loc 1 7294 51 discriminator 1 view .LVU563
 1764 002a 002D     		cmp	r5, #0
 1765 002c ECD1     		bne	.L134
 1766              	.L135:
7296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 1767              		.loc 1 7296 9 is_stmt 1 view .LVU564
7296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 1768              		.loc 1 7296 35 is_stmt 0 view .LVU565
 1769 002e 0023     		movs	r3, #0
 1770 0030 2363     		str	r3, [r4, #48]
7297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 1771              		.loc 1 7297 9 is_stmt 1 view .LVU566
7297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 1772              		.loc 1 7297 35 is_stmt 0 view .LVU567
 1773 0032 2022     		movs	r2, #32
 1774 0034 84F83D20 		strb	r2, [r4, #61]
7298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 1775              		.loc 1 7298 9 is_stmt 1 view .LVU568
7298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 1776              		.loc 1 7298 35 is_stmt 0 view .LVU569
 1777 0038 84F83E30 		strb	r3, [r4, #62]
7299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1778              		.loc 1 7299 9 is_stmt 1 view .LVU570
7299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1779              		.loc 1 7299 35 is_stmt 0 view .LVU571
 1780 003c 226C     		ldr	r2, [r4, #64]
 1781 003e 42F02002 		orr	r2, r2, #32
 1782 0042 2264     		str	r2, [r4, #64]
7302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1783              		.loc 1 7302 9 is_stmt 1 view .LVU572
7302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1784              		.loc 1 7302 9 view .LVU573
 1785 0044 84F83C30 		strb	r3, [r4, #60]
7302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1786              		.loc 1 7302 9 view .LVU574
7304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1787              		.loc 1 7304 9 view .LVU575
7304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1788              		.loc 1 7304 16 is_stmt 0 view .LVU576
 1789 0048 0120     		movs	r0, #1
 1790 004a 00E0     		b	.L133
 1791              	.L139:
7308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 1792              		.loc 1 7308 10 view .LVU577
 1793 004c 0020     		movs	r0, #0
 1794              	.L133:
7309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1795              		.loc 1 7309 1 view .LVU578
 1796 004e 70BD     		pop	{r4, r5, r6, pc}
 1797              	.LVL76:
 1798              	.L137:
7288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1799              		.loc 1 7288 14 view .LVU579
 1800 0050 0120     		movs	r0, #1
 1801 0052 FCE7     		b	.L133
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 172


 1802              		.cfi_endproc
 1803              	.LFE204:
 1805              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 1806              		.align	1
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv4-sp-d16
 1812              	I2C_RequestMemoryWrite:
 1813              	.LVL77:
 1814              	.LFB197:
6726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start */
 1815              		.loc 1 6726 1 is_stmt 1 view -0
 1816              		.cfi_startproc
 1817              		@ args = 8, pretend = 0, frame = 8
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
6726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Generate Start */
 1819              		.loc 1 6726 1 is_stmt 0 view .LVU581
 1820 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1821              		.cfi_def_cfa_offset 28
 1822              		.cfi_offset 4, -28
 1823              		.cfi_offset 5, -24
 1824              		.cfi_offset 6, -20
 1825              		.cfi_offset 7, -16
 1826              		.cfi_offset 8, -12
 1827              		.cfi_offset 9, -8
 1828              		.cfi_offset 14, -4
 1829 0004 85B0     		sub	sp, sp, #20
 1830              		.cfi_def_cfa_offset 48
 1831 0006 0446     		mov	r4, r0
 1832 0008 0D46     		mov	r5, r1
 1833 000a 9146     		mov	r9, r2
 1834 000c 1F46     		mov	r7, r3
 1835 000e DDF83080 		ldr	r8, [sp, #48]
 1836 0012 0D9E     		ldr	r6, [sp, #52]
6728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1837              		.loc 1 6728 3 is_stmt 1 view .LVU582
 1838 0014 0368     		ldr	r3, [r0]
 1839              	.LVL78:
6728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1840              		.loc 1 6728 3 is_stmt 0 view .LVU583
 1841 0016 1968     		ldr	r1, [r3]
 1842              	.LVL79:
6728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1843              		.loc 1 6728 3 view .LVU584
 1844 0018 41F48071 		orr	r1, r1, #256
 1845 001c 1960     		str	r1, [r3]
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1846              		.loc 1 6731 3 is_stmt 1 view .LVU585
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1847              		.loc 1 6731 7 is_stmt 0 view .LVU586
 1848 001e 0096     		str	r6, [sp]
 1849 0020 4346     		mov	r3, r8
 1850 0022 0022     		movs	r2, #0
 1851              	.LVL80:
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1852              		.loc 1 6731 7 view .LVU587
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 173


 1853 0024 4FF00111 		mov	r1, #65537
 1854 0028 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1855              	.LVL81:
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1856              		.loc 1 6731 6 view .LVU588
 1857 002c 60B9     		cbnz	r0, .L151
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1858              		.loc 1 6741 3 is_stmt 1 view .LVU589
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1859              		.loc 1 6741 7 is_stmt 0 view .LVU590
 1860 002e 2368     		ldr	r3, [r4]
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1861              		.loc 1 6741 24 view .LVU591
 1862 0030 05F0FE05 		and	r5, r5, #254
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1863              		.loc 1 6741 22 view .LVU592
 1864 0034 1D61     		str	r5, [r3, #16]
6744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1865              		.loc 1 6744 3 is_stmt 1 view .LVU593
6744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1866              		.loc 1 6744 7 is_stmt 0 view .LVU594
 1867 0036 3346     		mov	r3, r6
 1868 0038 4246     		mov	r2, r8
 1869 003a 2649     		ldr	r1, .L157
 1870 003c 2046     		mov	r0, r4
 1871 003e FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 1872              	.LVL82:
6744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1873              		.loc 1 6744 6 view .LVU595
 1874 0042 68B1     		cbz	r0, .L152
6746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1875              		.loc 1 6746 12 view .LVU596
 1876 0044 0120     		movs	r0, #1
 1877 0046 08E0     		b	.L143
 1878              	.L151:
6733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1879              		.loc 1 6733 5 is_stmt 1 view .LVU597
6733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1880              		.loc 1 6733 9 is_stmt 0 view .LVU598
 1881 0048 2368     		ldr	r3, [r4]
 1882 004a 1B68     		ldr	r3, [r3]
6733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1883              		.loc 1 6733 8 view .LVU599
 1884 004c 13F4807F 		tst	r3, #256
 1885 0050 02D0     		beq	.L142
6735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1886              		.loc 1 6735 7 is_stmt 1 view .LVU600
6735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1887              		.loc 1 6735 23 is_stmt 0 view .LVU601
 1888 0052 4FF40073 		mov	r3, #512
 1889 0056 2364     		str	r3, [r4, #64]
 1890              	.L142:
6737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1891              		.loc 1 6737 5 is_stmt 1 view .LVU602
6737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1892              		.loc 1 6737 12 is_stmt 0 view .LVU603
 1893 0058 0320     		movs	r0, #3
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 174


 1894              	.L143:
6791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1895              		.loc 1 6791 1 view .LVU604
 1896 005a 05B0     		add	sp, sp, #20
 1897              		.cfi_remember_state
 1898              		.cfi_def_cfa_offset 28
 1899              		@ sp needed
 1900 005c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1901              	.LVL83:
 1902              	.L152:
 1903              		.cfi_restore_state
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1904              		.loc 1 6750 3 is_stmt 1 view .LVU605
 1905              	.LBB13:
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1906              		.loc 1 6750 3 view .LVU606
 1907 0060 0023     		movs	r3, #0
 1908 0062 0393     		str	r3, [sp, #12]
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1909              		.loc 1 6750 3 view .LVU607
 1910 0064 2368     		ldr	r3, [r4]
 1911 0066 5A69     		ldr	r2, [r3, #20]
 1912 0068 0392     		str	r2, [sp, #12]
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1913              		.loc 1 6750 3 view .LVU608
 1914 006a 9B69     		ldr	r3, [r3, #24]
 1915 006c 0393     		str	r3, [sp, #12]
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1916              		.loc 1 6750 3 view .LVU609
 1917 006e 039B     		ldr	r3, [sp, #12]
 1918              	.LBE13:
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1919              		.loc 1 6750 3 view .LVU610
6753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1920              		.loc 1 6753 3 view .LVU611
6753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1921              		.loc 1 6753 7 is_stmt 0 view .LVU612
 1922 0070 3246     		mov	r2, r6
 1923 0072 4146     		mov	r1, r8
 1924 0074 2046     		mov	r0, r4
 1925 0076 FFF7FEFF 		bl	I2C_WaitOnTXEFlagUntilTimeout
 1926              	.LVL84:
6753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1927              		.loc 1 6753 6 view .LVU613
 1928 007a 30B9     		cbnz	r0, .L153
6764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1929              		.loc 1 6764 3 is_stmt 1 view .LVU614
6764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 1930              		.loc 1 6764 6 is_stmt 0 view .LVU615
 1931 007c 012F     		cmp	r7, #1
 1932 007e 0FD1     		bne	.L146
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1933              		.loc 1 6767 5 is_stmt 1 view .LVU616
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1934              		.loc 1 6767 9 is_stmt 0 view .LVU617
 1935 0080 2368     		ldr	r3, [r4]
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 175


 1936              		.loc 1 6767 26 view .LVU618
 1937 0082 5FFA89F6 		uxtb	r6, r9
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1938              		.loc 1 6767 24 view .LVU619
 1939 0086 1E61     		str	r6, [r3, #16]
 1940 0088 E7E7     		b	.L143
 1941              	.L153:
6755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1942              		.loc 1 6755 5 is_stmt 1 view .LVU620
6755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1943              		.loc 1 6755 13 is_stmt 0 view .LVU621
 1944 008a 236C     		ldr	r3, [r4, #64]
6755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1945              		.loc 1 6755 8 view .LVU622
 1946 008c 042B     		cmp	r3, #4
 1947 008e 01D0     		beq	.L154
 1948              	.L145:
6760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1949              		.loc 1 6760 5 is_stmt 1 view .LVU623
6760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1950              		.loc 1 6760 12 is_stmt 0 view .LVU624
 1951 0090 0120     		movs	r0, #1
 1952 0092 E2E7     		b	.L143
 1953              	.L154:
6758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1954              		.loc 1 6758 7 is_stmt 1 view .LVU625
 1955 0094 2268     		ldr	r2, [r4]
 1956 0096 1368     		ldr	r3, [r2]
 1957 0098 43F40073 		orr	r3, r3, #512
 1958 009c 1360     		str	r3, [r2]
 1959 009e F7E7     		b	.L145
 1960              	.L146:
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1961              		.loc 1 6773 5 view .LVU626
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1962              		.loc 1 6773 9 is_stmt 0 view .LVU627
 1963 00a0 2368     		ldr	r3, [r4]
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1964              		.loc 1 6773 26 view .LVU628
 1965 00a2 4FEA1922 		lsr	r2, r9, #8
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 1966              		.loc 1 6773 24 view .LVU629
 1967 00a6 1A61     		str	r2, [r3, #16]
6776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1968              		.loc 1 6776 5 is_stmt 1 view .LVU630
6776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1969              		.loc 1 6776 9 is_stmt 0 view .LVU631
 1970 00a8 3246     		mov	r2, r6
 1971 00aa 4146     		mov	r1, r8
 1972 00ac 2046     		mov	r0, r4
 1973 00ae FFF7FEFF 		bl	I2C_WaitOnTXEFlagUntilTimeout
 1974              	.LVL85:
6776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 1975              		.loc 1 6776 8 view .LVU632
 1976 00b2 20B9     		cbnz	r0, .L155
6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1977              		.loc 1 6787 5 is_stmt 1 view .LVU633
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 176


6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1978              		.loc 1 6787 9 is_stmt 0 view .LVU634
 1979 00b4 2368     		ldr	r3, [r4]
6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1980              		.loc 1 6787 26 view .LVU635
 1981 00b6 5FFA89F6 		uxtb	r6, r9
6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 1982              		.loc 1 6787 24 view .LVU636
 1983 00ba 1E61     		str	r6, [r3, #16]
 1984 00bc CDE7     		b	.L143
 1985              	.L155:
6778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1986              		.loc 1 6778 7 is_stmt 1 view .LVU637
6778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1987              		.loc 1 6778 15 is_stmt 0 view .LVU638
 1988 00be 236C     		ldr	r3, [r4, #64]
6778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 1989              		.loc 1 6778 10 view .LVU639
 1990 00c0 042B     		cmp	r3, #4
 1991 00c2 01D0     		beq	.L156
 1992              	.L148:
6783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1993              		.loc 1 6783 7 is_stmt 1 view .LVU640
6783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 1994              		.loc 1 6783 14 is_stmt 0 view .LVU641
 1995 00c4 0120     		movs	r0, #1
 1996 00c6 C8E7     		b	.L143
 1997              	.L156:
6781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 1998              		.loc 1 6781 9 is_stmt 1 view .LVU642
 1999 00c8 2268     		ldr	r2, [r4]
 2000 00ca 1368     		ldr	r3, [r2]
 2001 00cc 43F40073 		orr	r3, r3, #512
 2002 00d0 1360     		str	r3, [r2]
 2003 00d2 F7E7     		b	.L148
 2004              	.L158:
 2005              		.align	2
 2006              	.L157:
 2007 00d4 02000100 		.word	65538
 2008              		.cfi_endproc
 2009              	.LFE197:
 2011              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 2012              		.align	1
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv4-sp-d16
 2018              	I2C_RequestMemoryRead:
 2019              	.LVL86:
 2020              	.LFB198:
6806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Enable Acknowledge */
 2021              		.loc 1 6806 1 view -0
 2022              		.cfi_startproc
 2023              		@ args = 8, pretend = 0, frame = 8
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
6806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Enable Acknowledge */
 2025              		.loc 1 6806 1 is_stmt 0 view .LVU644
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 177


 2026 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2027              		.cfi_def_cfa_offset 32
 2028              		.cfi_offset 4, -32
 2029              		.cfi_offset 5, -28
 2030              		.cfi_offset 6, -24
 2031              		.cfi_offset 7, -20
 2032              		.cfi_offset 8, -16
 2033              		.cfi_offset 9, -12
 2034              		.cfi_offset 10, -8
 2035              		.cfi_offset 14, -4
 2036 0004 84B0     		sub	sp, sp, #16
 2037              		.cfi_def_cfa_offset 48
 2038 0006 0446     		mov	r4, r0
 2039 0008 0D46     		mov	r5, r1
 2040 000a 1646     		mov	r6, r2
 2041 000c 9946     		mov	r9, r3
 2042 000e 0C9F     		ldr	r7, [sp, #48]
 2043 0010 DDF83480 		ldr	r8, [sp, #52]
6808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2044              		.loc 1 6808 3 is_stmt 1 view .LVU645
 2045 0014 0268     		ldr	r2, [r0]
 2046              	.LVL87:
6808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2047              		.loc 1 6808 3 is_stmt 0 view .LVU646
 2048 0016 1368     		ldr	r3, [r2]
 2049              	.LVL88:
6808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2050              		.loc 1 6808 3 view .LVU647
 2051 0018 43F48063 		orr	r3, r3, #1024
 2052 001c 1360     		str	r3, [r2]
6811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2053              		.loc 1 6811 3 is_stmt 1 view .LVU648
 2054 001e 0368     		ldr	r3, [r0]
 2055 0020 1968     		ldr	r1, [r3]
 2056              	.LVL89:
6811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2057              		.loc 1 6811 3 is_stmt 0 view .LVU649
 2058 0022 41F48071 		orr	r1, r1, #256
 2059 0026 1960     		str	r1, [r3]
6814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2060              		.loc 1 6814 3 is_stmt 1 view .LVU650
6814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2061              		.loc 1 6814 7 is_stmt 0 view .LVU651
 2062 0028 CDF80080 		str	r8, [sp]
 2063 002c 3B46     		mov	r3, r7
 2064 002e 0022     		movs	r2, #0
 2065 0030 4FF00111 		mov	r1, #65537
 2066 0034 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2067              	.LVL90:
6814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2068              		.loc 1 6814 6 view .LVU652
 2069 0038 70B9     		cbnz	r0, .L176
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2070              		.loc 1 6824 3 is_stmt 1 view .LVU653
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2071              		.loc 1 6824 24 is_stmt 0 view .LVU654
 2072 003a 5FFA85FA 		uxtb	r10, r5
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 178


6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2073              		.loc 1 6824 7 view .LVU655
 2074 003e 2368     		ldr	r3, [r4]
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2075              		.loc 1 6824 24 view .LVU656
 2076 0040 05F0FE05 		and	r5, r5, #254
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2077              		.loc 1 6824 22 view .LVU657
 2078 0044 1D61     		str	r5, [r3, #16]
6827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2079              		.loc 1 6827 3 is_stmt 1 view .LVU658
6827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2080              		.loc 1 6827 7 is_stmt 0 view .LVU659
 2081 0046 4346     		mov	r3, r8
 2082 0048 3A46     		mov	r2, r7
 2083 004a 4149     		ldr	r1, .L184
 2084 004c 2046     		mov	r0, r4
 2085 004e FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 2086              	.LVL91:
6827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2087              		.loc 1 6827 6 view .LVU660
 2088 0052 68B1     		cbz	r0, .L177
6829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2089              		.loc 1 6829 12 view .LVU661
 2090 0054 0120     		movs	r0, #1
 2091 0056 08E0     		b	.L162
 2092              	.L176:
6816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2093              		.loc 1 6816 5 is_stmt 1 view .LVU662
6816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2094              		.loc 1 6816 9 is_stmt 0 view .LVU663
 2095 0058 2368     		ldr	r3, [r4]
 2096 005a 1B68     		ldr	r3, [r3]
6816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2097              		.loc 1 6816 8 view .LVU664
 2098 005c 13F4807F 		tst	r3, #256
 2099 0060 02D0     		beq	.L161
6818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2100              		.loc 1 6818 7 is_stmt 1 view .LVU665
6818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2101              		.loc 1 6818 23 is_stmt 0 view .LVU666
 2102 0062 4FF40073 		mov	r3, #512
 2103 0066 2364     		str	r3, [r4, #64]
 2104              	.L161:
6820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2105              		.loc 1 6820 5 is_stmt 1 view .LVU667
6820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2106              		.loc 1 6820 12 is_stmt 0 view .LVU668
 2107 0068 0320     		movs	r0, #3
 2108              	.L162:
6907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2109              		.loc 1 6907 1 view .LVU669
 2110 006a 04B0     		add	sp, sp, #16
 2111              		.cfi_remember_state
 2112              		.cfi_def_cfa_offset 32
 2113              		@ sp needed
 2114 006c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 179


 2115              	.LVL92:
 2116              	.L177:
 2117              		.cfi_restore_state
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2118              		.loc 1 6833 3 is_stmt 1 view .LVU670
 2119              	.LBB14:
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2120              		.loc 1 6833 3 view .LVU671
 2121 0070 0023     		movs	r3, #0
 2122 0072 0393     		str	r3, [sp, #12]
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2123              		.loc 1 6833 3 view .LVU672
 2124 0074 2368     		ldr	r3, [r4]
 2125 0076 5A69     		ldr	r2, [r3, #20]
 2126 0078 0392     		str	r2, [sp, #12]
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2127              		.loc 1 6833 3 view .LVU673
 2128 007a 9B69     		ldr	r3, [r3, #24]
 2129 007c 0393     		str	r3, [sp, #12]
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2130              		.loc 1 6833 3 view .LVU674
 2131 007e 039B     		ldr	r3, [sp, #12]
 2132              	.LBE14:
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2133              		.loc 1 6833 3 view .LVU675
6836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2134              		.loc 1 6836 3 view .LVU676
6836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2135              		.loc 1 6836 7 is_stmt 0 view .LVU677
 2136 0080 4246     		mov	r2, r8
 2137 0082 3946     		mov	r1, r7
 2138 0084 2046     		mov	r0, r4
 2139 0086 FFF7FEFF 		bl	I2C_WaitOnTXEFlagUntilTimeout
 2140              	.LVL93:
6836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2141              		.loc 1 6836 6 view .LVU678
 2142 008a 80B9     		cbnz	r0, .L178
6847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2143              		.loc 1 6847 3 is_stmt 1 view .LVU679
6847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2144              		.loc 1 6847 6 is_stmt 0 view .LVU680
 2145 008c B9F1010F 		cmp	r9, #1
 2146 0090 18D1     		bne	.L165
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2147              		.loc 1 6850 5 is_stmt 1 view .LVU681
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2148              		.loc 1 6850 9 is_stmt 0 view .LVU682
 2149 0092 2368     		ldr	r3, [r4]
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2150              		.loc 1 6850 26 view .LVU683
 2151 0094 F6B2     		uxtb	r6, r6
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2152              		.loc 1 6850 24 view .LVU684
 2153 0096 1E61     		str	r6, [r3, #16]
 2154              	.L166:
6874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2155              		.loc 1 6874 3 is_stmt 1 view .LVU685
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 180


6874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2156              		.loc 1 6874 7 is_stmt 0 view .LVU686
 2157 0098 4246     		mov	r2, r8
 2158 009a 3946     		mov	r1, r7
 2159 009c 2046     		mov	r0, r4
 2160 009e FFF7FEFF 		bl	I2C_WaitOnTXEFlagUntilTimeout
 2161              	.LVL94:
6874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2162              		.loc 1 6874 6 view .LVU687
 2163 00a2 68B3     		cbz	r0, .L169
6876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2164              		.loc 1 6876 5 is_stmt 1 view .LVU688
6876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2165              		.loc 1 6876 13 is_stmt 0 view .LVU689
 2166 00a4 236C     		ldr	r3, [r4, #64]
6876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2167              		.loc 1 6876 8 view .LVU690
 2168 00a6 042B     		cmp	r3, #4
 2169 00a8 24D0     		beq	.L179
 2170              	.L170:
6881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2171              		.loc 1 6881 5 is_stmt 1 view .LVU691
6881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2172              		.loc 1 6881 12 is_stmt 0 view .LVU692
 2173 00aa 0120     		movs	r0, #1
 2174 00ac DDE7     		b	.L162
 2175              	.L178:
6838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2176              		.loc 1 6838 5 is_stmt 1 view .LVU693
6838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2177              		.loc 1 6838 13 is_stmt 0 view .LVU694
 2178 00ae 236C     		ldr	r3, [r4, #64]
6838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2179              		.loc 1 6838 8 view .LVU695
 2180 00b0 042B     		cmp	r3, #4
 2181 00b2 01D0     		beq	.L180
 2182              	.L164:
6843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2183              		.loc 1 6843 5 is_stmt 1 view .LVU696
6843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2184              		.loc 1 6843 12 is_stmt 0 view .LVU697
 2185 00b4 0120     		movs	r0, #1
 2186 00b6 D8E7     		b	.L162
 2187              	.L180:
6841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2188              		.loc 1 6841 7 is_stmt 1 view .LVU698
 2189 00b8 2268     		ldr	r2, [r4]
 2190 00ba 1368     		ldr	r3, [r2]
 2191 00bc 43F40073 		orr	r3, r3, #512
 2192 00c0 1360     		str	r3, [r2]
 2193 00c2 F7E7     		b	.L164
 2194              	.L165:
6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2195              		.loc 1 6856 5 view .LVU699
6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2196              		.loc 1 6856 9 is_stmt 0 view .LVU700
 2197 00c4 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 181


6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2198              		.loc 1 6856 26 view .LVU701
 2199 00c6 320A     		lsrs	r2, r6, #8
6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2200              		.loc 1 6856 24 view .LVU702
 2201 00c8 1A61     		str	r2, [r3, #16]
6859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2202              		.loc 1 6859 5 is_stmt 1 view .LVU703
6859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2203              		.loc 1 6859 9 is_stmt 0 view .LVU704
 2204 00ca 4246     		mov	r2, r8
 2205 00cc 3946     		mov	r1, r7
 2206 00ce 2046     		mov	r0, r4
 2207 00d0 FFF7FEFF 		bl	I2C_WaitOnTXEFlagUntilTimeout
 2208              	.LVL95:
6859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2209              		.loc 1 6859 8 view .LVU705
 2210 00d4 18B9     		cbnz	r0, .L181
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2211              		.loc 1 6870 5 is_stmt 1 view .LVU706
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2212              		.loc 1 6870 9 is_stmt 0 view .LVU707
 2213 00d6 2368     		ldr	r3, [r4]
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2214              		.loc 1 6870 26 view .LVU708
 2215 00d8 F6B2     		uxtb	r6, r6
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2216              		.loc 1 6870 24 view .LVU709
 2217 00da 1E61     		str	r6, [r3, #16]
 2218 00dc DCE7     		b	.L166
 2219              	.L181:
6861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2220              		.loc 1 6861 7 is_stmt 1 view .LVU710
6861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2221              		.loc 1 6861 15 is_stmt 0 view .LVU711
 2222 00de 236C     		ldr	r3, [r4, #64]
6861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2223              		.loc 1 6861 10 view .LVU712
 2224 00e0 042B     		cmp	r3, #4
 2225 00e2 01D0     		beq	.L182
 2226              	.L168:
6866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2227              		.loc 1 6866 7 is_stmt 1 view .LVU713
6866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2228              		.loc 1 6866 14 is_stmt 0 view .LVU714
 2229 00e4 0120     		movs	r0, #1
 2230 00e6 C0E7     		b	.L162
 2231              	.L182:
6864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 2232              		.loc 1 6864 9 is_stmt 1 view .LVU715
 2233 00e8 2268     		ldr	r2, [r4]
 2234 00ea 1368     		ldr	r3, [r2]
 2235 00ec 43F40073 		orr	r3, r3, #512
 2236 00f0 1360     		str	r3, [r2]
 2237 00f2 F7E7     		b	.L168
 2238              	.L179:
6879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 182


 2239              		.loc 1 6879 7 view .LVU716
 2240 00f4 2268     		ldr	r2, [r4]
 2241 00f6 1368     		ldr	r3, [r2]
 2242 00f8 43F40073 		orr	r3, r3, #512
 2243 00fc 1360     		str	r3, [r2]
 2244 00fe D4E7     		b	.L170
 2245              	.L169:
6885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2246              		.loc 1 6885 3 view .LVU717
 2247 0100 2268     		ldr	r2, [r4]
 2248 0102 1368     		ldr	r3, [r2]
 2249 0104 43F48073 		orr	r3, r3, #256
 2250 0108 1360     		str	r3, [r2]
6888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2251              		.loc 1 6888 3 view .LVU718
6888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2252              		.loc 1 6888 7 is_stmt 0 view .LVU719
 2253 010a CDF80080 		str	r8, [sp]
 2254 010e 3B46     		mov	r3, r7
 2255 0110 0022     		movs	r2, #0
 2256 0112 4FF00111 		mov	r1, #65537
 2257 0116 2046     		mov	r0, r4
 2258 0118 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2259              	.LVL96:
6888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2260              		.loc 1 6888 6 view .LVU720
 2261 011c 68B9     		cbnz	r0, .L183
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2262              		.loc 1 6898 3 is_stmt 1 view .LVU721
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2263              		.loc 1 6898 7 is_stmt 0 view .LVU722
 2264 011e 2268     		ldr	r2, [r4]
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2265              		.loc 1 6898 24 view .LVU723
 2266 0120 4AF00103 		orr	r3, r10, #1
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2267              		.loc 1 6898 22 view .LVU724
 2268 0124 1361     		str	r3, [r2, #16]
6901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2269              		.loc 1 6901 3 is_stmt 1 view .LVU725
6901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2270              		.loc 1 6901 7 is_stmt 0 view .LVU726
 2271 0126 4346     		mov	r3, r8
 2272 0128 3A46     		mov	r2, r7
 2273 012a 0949     		ldr	r1, .L184
 2274 012c 2046     		mov	r0, r4
 2275 012e FFF7FEFF 		bl	I2C_WaitOnMasterAddressFlagUntilTimeout
 2276              	.LVL97:
6901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2277              		.loc 1 6901 6 view .LVU727
 2278 0132 0028     		cmp	r0, #0
 2279 0134 99D0     		beq	.L162
6903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2280              		.loc 1 6903 12 view .LVU728
 2281 0136 0120     		movs	r0, #1
 2282 0138 97E7     		b	.L162
 2283              	.L183:
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 183


6890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2284              		.loc 1 6890 5 is_stmt 1 view .LVU729
6890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2285              		.loc 1 6890 9 is_stmt 0 view .LVU730
 2286 013a 2368     		ldr	r3, [r4]
 2287 013c 1B68     		ldr	r3, [r3]
6890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2288              		.loc 1 6890 8 view .LVU731
 2289 013e 13F4807F 		tst	r3, #256
 2290 0142 02D0     		beq	.L172
6892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2291              		.loc 1 6892 7 is_stmt 1 view .LVU732
6892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2292              		.loc 1 6892 23 is_stmt 0 view .LVU733
 2293 0144 4FF40073 		mov	r3, #512
 2294 0148 2364     		str	r3, [r4, #64]
 2295              	.L172:
6894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2296              		.loc 1 6894 5 is_stmt 1 view .LVU734
6894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   }
 2297              		.loc 1 6894 12 is_stmt 0 view .LVU735
 2298 014a 0320     		movs	r0, #3
 2299 014c 8DE7     		b	.L162
 2300              	.L185:
 2301 014e 00BF     		.align	2
 2302              	.L184:
 2303 0150 02000100 		.word	65538
 2304              		.cfi_endproc
 2305              	.LFE198:
 2307              		.section	.text.I2C_WaitOnBTFFlagUntilTimeout,"ax",%progbits
 2308              		.align	1
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2312              		.fpu fpv4-sp-d16
 2314              	I2C_WaitOnBTFFlagUntilTimeout:
 2315              	.LVL98:
 2316              	.LFB205:
7320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 2317              		.loc 1 7320 1 is_stmt 1 view -0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
7320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 2321              		.loc 1 7320 1 is_stmt 0 view .LVU737
 2322 0000 70B5     		push	{r4, r5, r6, lr}
 2323              		.cfi_def_cfa_offset 16
 2324              		.cfi_offset 4, -16
 2325              		.cfi_offset 5, -12
 2326              		.cfi_offset 6, -8
 2327              		.cfi_offset 14, -4
 2328 0002 0446     		mov	r4, r0
 2329 0004 0D46     		mov	r5, r1
 2330 0006 1646     		mov	r6, r2
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2331              		.loc 1 7321 3 is_stmt 1 view .LVU738
 2332              	.LVL99:
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 184


 2333              	.L189:
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2334              		.loc 1 7321 9 view .LVU739
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2335              		.loc 1 7321 10 is_stmt 0 view .LVU740
 2336 0008 2368     		ldr	r3, [r4]
 2337 000a 5B69     		ldr	r3, [r3, #20]
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2338              		.loc 1 7321 9 view .LVU741
 2339 000c 13F0040F 		tst	r3, #4
 2340 0010 1CD1     		bne	.L194
7324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2341              		.loc 1 7324 5 is_stmt 1 view .LVU742
7324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2342              		.loc 1 7324 9 is_stmt 0 view .LVU743
 2343 0012 2046     		mov	r0, r4
 2344 0014 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 2345              	.LVL100:
7324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2346              		.loc 1 7324 8 view .LVU744
 2347 0018 D0B9     		cbnz	r0, .L192
7330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2348              		.loc 1 7330 5 is_stmt 1 view .LVU745
7330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2349              		.loc 1 7330 8 is_stmt 0 view .LVU746
 2350 001a B5F1FF3F 		cmp	r5, #-1
 2351 001e F3D0     		beq	.L189
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2352              		.loc 1 7332 7 is_stmt 1 view .LVU747
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2353              		.loc 1 7332 13 is_stmt 0 view .LVU748
 2354 0020 FFF7FEFF 		bl	HAL_GetTick
 2355              	.LVL101:
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2356              		.loc 1 7332 27 view .LVU749
 2357 0024 801B     		subs	r0, r0, r6
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2358              		.loc 1 7332 10 view .LVU750
 2359 0026 A842     		cmp	r0, r5
 2360 0028 01D8     		bhi	.L190
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       {
 2361              		.loc 1 7332 51 discriminator 1 view .LVU751
 2362 002a 002D     		cmp	r5, #0
 2363 002c ECD1     		bne	.L189
 2364              	.L190:
7334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 2365              		.loc 1 7334 9 is_stmt 1 view .LVU752
7334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->State               = HAL_I2C_STATE_READY;
 2366              		.loc 1 7334 35 is_stmt 0 view .LVU753
 2367 002e 0023     		movs	r3, #0
 2368 0030 2363     		str	r3, [r4, #48]
7335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 2369              		.loc 1 7335 9 is_stmt 1 view .LVU754
7335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->Mode                = HAL_I2C_MODE_NONE;
 2370              		.loc 1 7335 35 is_stmt 0 view .LVU755
 2371 0032 2022     		movs	r2, #32
 2372 0034 84F83D20 		strb	r2, [r4, #61]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 185


7336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2373              		.loc 1 7336 9 is_stmt 1 view .LVU756
7336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****         hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2374              		.loc 1 7336 35 is_stmt 0 view .LVU757
 2375 0038 84F83E30 		strb	r3, [r4, #62]
7337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2376              		.loc 1 7337 9 is_stmt 1 view .LVU758
7337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2377              		.loc 1 7337 35 is_stmt 0 view .LVU759
 2378 003c 226C     		ldr	r2, [r4, #64]
 2379 003e 42F02002 		orr	r2, r2, #32
 2380 0042 2264     		str	r2, [r4, #64]
7340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2381              		.loc 1 7340 9 is_stmt 1 view .LVU760
7340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2382              		.loc 1 7340 9 view .LVU761
 2383 0044 84F83C30 		strb	r3, [r4, #60]
7340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2384              		.loc 1 7340 9 view .LVU762
7342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 2385              		.loc 1 7342 9 view .LVU763
7342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       }
 2386              		.loc 1 7342 16 is_stmt 0 view .LVU764
 2387 0048 0120     		movs	r0, #1
 2388 004a 00E0     		b	.L188
 2389              	.L194:
7346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 2390              		.loc 1 7346 10 view .LVU765
 2391 004c 0020     		movs	r0, #0
 2392              	.L188:
7347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2393              		.loc 1 7347 1 view .LVU766
 2394 004e 70BD     		pop	{r4, r5, r6, pc}
 2395              	.LVL102:
 2396              	.L192:
7326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2397              		.loc 1 7326 14 view .LVU767
 2398 0050 0120     		movs	r0, #1
 2399 0052 FCE7     		b	.L188
 2400              		.cfi_endproc
 2401              	.LFE205:
 2403              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 2404              		.align	1
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu fpv4-sp-d16
 2410              	I2C_WaitOnRXNEFlagUntilTimeout:
 2411              	.LVL103:
 2412              	.LFB208:
7420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2413              		.loc 1 7420 1 is_stmt 1 view -0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 0, uses_anonymous_args = 0
7420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2417              		.loc 1 7420 1 is_stmt 0 view .LVU769
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 186


 2418 0000 70B5     		push	{r4, r5, r6, lr}
 2419              		.cfi_def_cfa_offset 16
 2420              		.cfi_offset 4, -16
 2421              		.cfi_offset 5, -12
 2422              		.cfi_offset 6, -8
 2423              		.cfi_offset 14, -4
 2424 0002 0546     		mov	r5, r0
 2425 0004 0C46     		mov	r4, r1
 2426 0006 1646     		mov	r6, r2
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2427              		.loc 1 7422 3 is_stmt 1 view .LVU770
 2428              	.LVL104:
 2429              	.L196:
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2430              		.loc 1 7422 9 view .LVU771
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2431              		.loc 1 7422 10 is_stmt 0 view .LVU772
 2432 0008 2B68     		ldr	r3, [r5]
 2433 000a 5969     		ldr	r1, [r3, #20]
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2434              		.loc 1 7422 9 view .LVU773
 2435 000c 11F0400F 		tst	r1, #64
 2436 0010 29D1     		bne	.L202
7425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2437              		.loc 1 7425 5 is_stmt 1 view .LVU774
7425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2438              		.loc 1 7425 9 is_stmt 0 view .LVU775
 2439 0012 5969     		ldr	r1, [r3, #20]
7425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2440              		.loc 1 7425 8 view .LVU776
 2441 0014 11F0100F 		tst	r1, #16
 2442 0018 15D1     		bne	.L203
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2443              		.loc 1 7442 5 is_stmt 1 view .LVU777
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2444              		.loc 1 7442 11 is_stmt 0 view .LVU778
 2445 001a FFF7FEFF 		bl	HAL_GetTick
 2446              	.LVL105:
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2447              		.loc 1 7442 25 view .LVU779
 2448 001e 801B     		subs	r0, r0, r6
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2449              		.loc 1 7442 8 view .LVU780
 2450 0020 A042     		cmp	r0, r4
 2451 0022 01D8     		bhi	.L199
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2452              		.loc 1 7442 49 discriminator 1 view .LVU781
 2453 0024 002C     		cmp	r4, #0
 2454 0026 EFD1     		bne	.L196
 2455              	.L199:
7444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2456              		.loc 1 7444 7 is_stmt 1 view .LVU782
7444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2457              		.loc 1 7444 33 is_stmt 0 view .LVU783
 2458 0028 0023     		movs	r3, #0
 2459 002a 2B63     		str	r3, [r5, #48]
7445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 187


 2460              		.loc 1 7445 7 is_stmt 1 view .LVU784
7445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 2461              		.loc 1 7445 33 is_stmt 0 view .LVU785
 2462 002c 2022     		movs	r2, #32
 2463 002e 85F83D20 		strb	r2, [r5, #61]
7446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2464              		.loc 1 7446 7 is_stmt 1 view .LVU786
7446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2465              		.loc 1 7446 33 is_stmt 0 view .LVU787
 2466 0032 85F83E30 		strb	r3, [r5, #62]
7447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2467              		.loc 1 7447 7 is_stmt 1 view .LVU788
7447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2468              		.loc 1 7447 33 is_stmt 0 view .LVU789
 2469 0036 2A6C     		ldr	r2, [r5, #64]
 2470 0038 42F02002 		orr	r2, r2, #32
 2471 003c 2A64     		str	r2, [r5, #64]
7450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2472              		.loc 1 7450 7 is_stmt 1 view .LVU790
7450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2473              		.loc 1 7450 7 view .LVU791
 2474 003e 85F83C30 		strb	r3, [r5, #60]
7450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2475              		.loc 1 7450 7 view .LVU792
7452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2476              		.loc 1 7452 7 view .LVU793
7452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2477              		.loc 1 7452 14 is_stmt 0 view .LVU794
 2478 0042 0120     		movs	r0, #1
 2479              	.L198:
7456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2480              		.loc 1 7456 1 view .LVU795
 2481 0044 70BD     		pop	{r4, r5, r6, pc}
 2482              	.LVL106:
 2483              	.L203:
7428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2484              		.loc 1 7428 7 is_stmt 1 view .LVU796
 2485 0046 6FF01002 		mvn	r2, #16
 2486 004a 5A61     		str	r2, [r3, #20]
7430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2487              		.loc 1 7430 7 view .LVU797
7430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2488              		.loc 1 7430 33 is_stmt 0 view .LVU798
 2489 004c 0023     		movs	r3, #0
 2490 004e 2B63     		str	r3, [r5, #48]
7431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 2491              		.loc 1 7431 7 is_stmt 1 view .LVU799
7431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 2492              		.loc 1 7431 33 is_stmt 0 view .LVU800
 2493 0050 2022     		movs	r2, #32
 2494 0052 85F83D20 		strb	r2, [r5, #61]
7432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 2495              		.loc 1 7432 7 is_stmt 1 view .LVU801
7432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 2496              		.loc 1 7432 33 is_stmt 0 view .LVU802
 2497 0056 85F83E30 		strb	r3, [r5, #62]
7433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 188


 2498              		.loc 1 7433 7 is_stmt 1 view .LVU803
7433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2499              		.loc 1 7433 33 is_stmt 0 view .LVU804
 2500 005a 2A6C     		ldr	r2, [r5, #64]
 2501 005c 2A64     		str	r2, [r5, #64]
7436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2502              		.loc 1 7436 7 is_stmt 1 view .LVU805
7436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2503              		.loc 1 7436 7 view .LVU806
 2504 005e 85F83C30 		strb	r3, [r5, #60]
7436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2505              		.loc 1 7436 7 view .LVU807
7438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2506              		.loc 1 7438 7 view .LVU808
7438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2507              		.loc 1 7438 14 is_stmt 0 view .LVU809
 2508 0062 0120     		movs	r0, #1
 2509 0064 EEE7     		b	.L198
 2510              	.L202:
7455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 2511              		.loc 1 7455 10 view .LVU810
 2512 0066 0020     		movs	r0, #0
 2513 0068 ECE7     		b	.L198
 2514              		.cfi_endproc
 2515              	.LFE208:
 2517              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 2518              		.align	1
 2519              		.syntax unified
 2520              		.thumb
 2521              		.thumb_func
 2522              		.fpu fpv4-sp-d16
 2524              	I2C_WaitOnSTOPFlagUntilTimeout:
 2525              	.LVL107:
 2526              	.LFB206:
7358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 2527              		.loc 1 7358 1 is_stmt 1 view -0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
7358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 2531              		.loc 1 7358 1 is_stmt 0 view .LVU812
 2532 0000 70B5     		push	{r4, r5, r6, lr}
 2533              		.cfi_def_cfa_offset 16
 2534              		.cfi_offset 4, -16
 2535              		.cfi_offset 5, -12
 2536              		.cfi_offset 6, -8
 2537              		.cfi_offset 14, -4
 2538 0002 0446     		mov	r4, r0
 2539 0004 0D46     		mov	r5, r1
 2540 0006 1646     		mov	r6, r2
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2541              		.loc 1 7359 3 is_stmt 1 view .LVU813
 2542              	.LVL108:
 2543              	.L205:
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2544              		.loc 1 7359 9 view .LVU814
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 189


 2545              		.loc 1 7359 10 is_stmt 0 view .LVU815
 2546 0008 2368     		ldr	r3, [r4]
 2547 000a 5B69     		ldr	r3, [r3, #20]
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   {
 2548              		.loc 1 7359 9 view .LVU816
 2549 000c 13F0100F 		tst	r3, #16
 2550 0010 19D1     		bne	.L211
7362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2551              		.loc 1 7362 5 is_stmt 1 view .LVU817
7362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2552              		.loc 1 7362 9 is_stmt 0 view .LVU818
 2553 0012 2046     		mov	r0, r4
 2554 0014 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 2555              	.LVL109:
7362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2556              		.loc 1 7362 8 view .LVU819
 2557 0018 B8B9     		cbnz	r0, .L209
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2558              		.loc 1 7368 5 is_stmt 1 view .LVU820
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2559              		.loc 1 7368 11 is_stmt 0 view .LVU821
 2560 001a FFF7FEFF 		bl	HAL_GetTick
 2561              	.LVL110:
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2562              		.loc 1 7368 25 view .LVU822
 2563 001e 801B     		subs	r0, r0, r6
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2564              		.loc 1 7368 8 view .LVU823
 2565 0020 A842     		cmp	r0, r5
 2566 0022 01D8     		bhi	.L207
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     {
 2567              		.loc 1 7368 49 discriminator 1 view .LVU824
 2568 0024 002D     		cmp	r5, #0
 2569 0026 EFD1     		bne	.L205
 2570              	.L207:
7370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2571              		.loc 1 7370 7 is_stmt 1 view .LVU825
7370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->State               = HAL_I2C_STATE_READY;
 2572              		.loc 1 7370 33 is_stmt 0 view .LVU826
 2573 0028 0023     		movs	r3, #0
 2574 002a 2363     		str	r3, [r4, #48]
7371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 2575              		.loc 1 7371 7 is_stmt 1 view .LVU827
7371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->Mode                = HAL_I2C_MODE_NONE;
 2576              		.loc 1 7371 33 is_stmt 0 view .LVU828
 2577 002c 2022     		movs	r2, #32
 2578 002e 84F83D20 		strb	r2, [r4, #61]
7372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2579              		.loc 1 7372 7 is_stmt 1 view .LVU829
7372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****       hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 2580              		.loc 1 7372 33 is_stmt 0 view .LVU830
 2581 0032 84F83E30 		strb	r3, [r4, #62]
7373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2582              		.loc 1 7373 7 is_stmt 1 view .LVU831
7373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2583              		.loc 1 7373 33 is_stmt 0 view .LVU832
 2584 0036 226C     		ldr	r2, [r4, #64]
ARM GAS  C:\Users\anmh1\AppData\Local\Temp\ccKA1mvC.s 			page 190


 2585 0038 42F02002 		orr	r2, r2, #32
 2586 003c 2264     		str	r2, [r4, #64]
7376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2587              		.loc 1 7376 7 is_stmt 1 view .LVU833
7376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2588              		.loc 1 7376 7 view .LVU834
 2589 003e 84F83C30 		strb	r3, [r4, #60]
7376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2590              		.loc 1 7376 7 view .LVU835
7378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2591              		.loc 1 7378 7 view .LVU836
7378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2592              		.loc 1 7378 14 is_stmt 0 view .LVU837
 2593 0042 0120     		movs	r0, #1
 2594              	.L206:
7382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** 
 2595              		.loc 1 7382 1 view .LVU838
 2596 0044 70BD     		pop	{r4, r5, r6, pc}
 2597              	.LVL111:
 2598              	.L211:
7381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c **** }
 2599              		.loc 1 7381 10 view .LVU839
 2600 0046 0020     		movs	r0, #0
 2601 0048 FCE7     		b	.L206
 2602              	.L209:
7364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****     }
 2603              		.loc 1 7364 14 view .LVU840
 2604 004a 0120     		movs	r0, #1
 2605 004c FAE7     		b	.L206
 2606              		.cfi_endproc
 2607              	.LFE206:
 2609              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 2610              		.align	1
 2611              		.weak	HAL_I2C_MspInit
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2615              		.fpu fpv4-sp-d16
 2617              	HAL_I2C_MspInit:
 2618              	.LVL112:
 2619              	.LFB132:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 2620              		.loc 1 596 1 is_stmt 1 view -0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
